{"ast":null,"code":"import _regeneratorRuntime from\"/mnt/Data/Javascript_code/Ionic/coffee-db4/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/mnt/Data/Javascript_code/Ionic/coffee-db4/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{useContext,useEffect}from'react';import{readData,readSettings,readPicture}from'./data';import{beansDefault,brewsDefault}from'../objects/default-values';import{beansSettingsFileName,beansDataFileName,brewsSettingsFileName,brewsDataFileName}from'../objects/filenames';import{createTable}from'../frontend/create-table.js';import{store}from'./store';export var LoadData=function LoadData(){var globalState=useContext(store);var state=globalState.state,dispatch=globalState.dispatch;//let isLoaded = false \nvar beansSettings;var brewsSettings;var beansData;var brewsData;var beansPics=[];var brewsPics=[];var folder=beansDataFileName.split('/')[0];useEffect(function(){var loadAsync=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var beansSettingsRaw,brewsSettingsRaw,rawDataBeans,rawDataBrews,tempBeansPics,i,temp,tempBrewsPics,_i,_temp;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return readSettings(beansSettingsFileName);case 2:beansSettingsRaw=_context.sent;if(beansSettingsRaw){beansSettings=JSON.parse(beansSettingsRaw);}else{beansSettings=beansDefault;}// Settings Brews\n_context.next=6;return readSettings(brewsSettingsFileName);case 6:brewsSettingsRaw=_context.sent;if(brewsSettingsRaw){brewsSettings=JSON.parse(brewsSettingsRaw);}else{brewsSettings=brewsDefault;}// Data Beans\n_context.next=10;return readData(beansDataFileName);case 10:rawDataBeans=_context.sent;if(rawDataBeans){beansData=createTable(rawDataBeans);}else{beansData=[];}// Data Brews\n_context.next=14;return readData(brewsDataFileName);case 14:rawDataBrews=_context.sent;if(rawDataBrews){brewsData=createTable(rawDataBrews);}else{brewsData=[];}// Pics Beans\nif(!(beansData.length>0)){_context.next=30;break;}// I need an else here\ntempBeansPics={};i=0;case 19:if(!(i<beansData.length)){_context.next=27;break;}_context.next=22;return readPicture(folder+'/'+beansData[i].id.toString()+'.jpeg');case 22:temp=_context.sent;tempBeansPics[beansData[i].id]=temp;case 24:i++;_context.next=19;break;case 27:if(Object.keys(tempBeansPics).length>0){beansPics.push(tempBeansPics);}_context.next=31;break;case 30:beansPics.push({});case 31:if(!(brewsData.length>0)){_context.next=45;break;}tempBrewsPics={};_i=0;case 34:if(!(_i<brewsData.length)){_context.next=42;break;}_context.next=37;return readPicture(folder+'/'+brewsData[_i].id.toString()+'.jpeg');case 37:_temp=_context.sent;tempBrewsPics[brewsData[_i].id]=_temp;case 39:_i++;_context.next=34;break;case 42:if(Object.keys(tempBrewsPics).length>0){brewsPics.push(tempBrewsPics);}_context.next=46;break;case 45:brewsPics.push({});case 46://isLoaded = true\ndispatch({type:'setBeansSettings',value:beansSettings});dispatch({type:'setBeansData',value:beansData});dispatch({type:'setBeansPics',value:beansPics});dispatch({type:'setBrewsSettings',value:brewsSettings});dispatch({type:'setBrewsData',value:brewsData});dispatch({type:'setBrewsPics',value:brewsPics});case 52:case\"end\":return _context.stop();}}},_callee);}));return function loadAsync(){return _ref.apply(this,arguments);};}();loadAsync();},[]);};","map":{"version":3,"sources":["/mnt/Data/Javascript_code/Ionic/coffee-db4/src/components/backend/loadData.js"],"names":["useContext","useEffect","readData","readSettings","readPicture","beansDefault","brewsDefault","beansSettingsFileName","beansDataFileName","brewsSettingsFileName","brewsDataFileName","createTable","store","LoadData","globalState","state","dispatch","beansSettings","brewsSettings","beansData","brewsData","beansPics","brewsPics","folder","split","loadAsync","beansSettingsRaw","JSON","parse","brewsSettingsRaw","rawDataBeans","rawDataBrews","length","tempBeansPics","i","id","toString","temp","Object","keys","push","tempBrewsPics","type","value"],"mappings":"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","sourcesContent":["import { useContext, useEffect} from 'react'\n\nimport { readData, readSettings, readPicture } from './data'\nimport { beansDefault, brewsDefault } from '../objects/default-values'\nimport { beansSettingsFileName, beansDataFileName, brewsSettingsFileName, brewsDataFileName  } from '../objects/filenames'\nimport { createTable } from '../frontend/create-table.js'\nimport { store } from './store'\n\nexport const LoadData = () => {\n    const globalState = useContext(store)\n    const {state, dispatch } = globalState\n   //let isLoaded = false \n\n    let beansSettings\n    let brewsSettings\n    let beansData\n    let brewsData\n    let beansPics = []\n    let brewsPics = []\n    \n    const folder = beansDataFileName.split('/')[0]\n\n    \n    useEffect( () => {\n\n    const loadAsync = async () => {\n\n        // Settings Beans\n        const beansSettingsRaw = await readSettings(beansSettingsFileName)\n        \n        if (beansSettingsRaw) {\n            beansSettings = JSON.parse(beansSettingsRaw)\n        } else {\n            beansSettings = beansDefault\n        }\n        \n        // Settings Brews\n        const brewsSettingsRaw = await readSettings(brewsSettingsFileName)\n        \n        if (brewsSettingsRaw) {\n          brewsSettings = JSON.parse(brewsSettingsRaw)\n        } else {\n          brewsSettings = brewsDefault\n          \n        }\n\n        // Data Beans\n        const rawDataBeans = await readData(beansDataFileName)\n        if (rawDataBeans) {\n          beansData = createTable(rawDataBeans)\n        } else {\n          beansData = []\n        }\n        // Data Brews\n        const rawDataBrews = await readData(brewsDataFileName)\n       if (rawDataBrews) { \n          brewsData = createTable(rawDataBrews)\n        } else {\n          brewsData = []\n        }\n\n        // Pics Beans\n        if(beansData.length > 0){  // I need an else here\n          let tempBeansPics = {}\n          for (let i=0; i<beansData.length; i++){\n            const temp = await readPicture(folder + '/' + beansData[i].id.toString() + '.jpeg')\n\n            tempBeansPics[beansData[i].id]=temp\n\n          }\n          if(Object.keys(tempBeansPics).length > 0){\n            beansPics.push(tempBeansPics)\n          }\n        } else {\n          beansPics.push({})\n        }\n        // Pics Brews\n        if(brewsData.length > 0){\n          let tempBrewsPics = {}\n          for (let i=0; i<brewsData.length; i++){\n            const temp = await readPicture(folder + '/' + brewsData[i].id.toString() + '.jpeg')\n            tempBrewsPics[brewsData[i].id]=temp\n\n          }\n\n          if(Object.keys(tempBrewsPics).length > 0){\n            brewsPics.push(tempBrewsPics)\n\n          }\n        } else {\n          brewsPics.push({})\n        }\n\n        //isLoaded = true\n        \n        dispatch({type: 'setBeansSettings', value: beansSettings})\n        dispatch({type: 'setBeansData', value: beansData})\n        dispatch({type: 'setBeansPics', value: beansPics})\n\n        dispatch({type: 'setBrewsSettings', value: brewsSettings})\n        dispatch({type: 'setBrewsData', value: brewsData})\n        dispatch({type: 'setBrewsPics', value: brewsPics})\n    }\n    loadAsync() \n\n} , [])\n}\n\n\n"]},"metadata":{},"sourceType":"module"}