{"ast":null,"code":"var _jsxFileName = \"/mnt/Data/Javascript_code/Ionic/coffee-db3/src/components/frontend/sort-items.js\";\nimport React, { useEffect, useLayoutEffect, useContext, useState, useReducer } from 'react';\nimport { IonItem, IonReorder, IonReorderGroup, IonItemDivider, IonCheckbox, IonGrid, IonRow, IonCol, IonLabel, IonContent, IonButton, IonIcon, IonButtons, IonInput, IonTextarea } from '@ionic/react';\nimport { trash, save, close, addCircle } from 'ionicons/icons';\nimport { readSettings, overWriteFile } from '../backend/data';\nimport { store } from '../backend/store';\nimport { stat } from 'fs'; // fields is the basic array of fields that's available upon installation\n\n/*\nconst fields = [\n    ['Bohne', true],\n    ['RÃ¶ster', true],\n    ['Kommentar', false]]\n\nconst fileName = 'data/beans-settings.data'\n*/\n\nexport const SortItems = (fileName, defaultSettings) => {\n  //ReactFunc()\n  const globalState = useContext(store);\n  const {\n    state,\n    dispatch\n  } = globalState;\n  const [ignored, forceUpdate] = useReducer(x => x + 1, 0); // this function will force an updated of the dom\n  //   const [items, setItems] = useState(JSON.parse(JSON.stringify(state.beans.settings)))\n\n  const [tempItems, setTempItems] = useState(JSON.parse(JSON.stringify(state.beans.settings)));\n  const [tempItem, setTempItem] = useState('');\n  const [isFileRead, setIsFileRead] = useState(false);\n\n  const reducer = (myState, action) => {\n    console.log('REDUCERxxxxxx:', myState, action);\n    let tempArray = JSON.parse(JSON.stringify(myState));\n\n    switch (action.type) {\n      case 'swap':\n        return action.value;\n\n      case 'addRow':\n        tempArray.push([action.itemName, true]);\n        console.log('TEMPARRAY in addROW', tempArray);\n        return tempArray;\n\n      case 'delRow':\n        console.log('DELROW:', myState, action.index); //tempArray = JSON.parse(JSON.stringify(state))\n\n        tempArray.splice(action.index, 1);\n        return tempArray;\n      //return state.splice(action.index, 1)\n\n      case 'check':\n        tempArray[action.index][1] = action.checkState;\n        return tempArray;\n      //return state[action.index][1] = action.checkState\n\n      case 'reset':\n        return JSON.parse(JSON.stringify(state.beans.settings));\n      //case 'test':\n      //  return console.log('------------ HEYHo***************') \n\n      default:\n        throw new Error();\n    }\n  };\n\n  const [items, setItems] = useReducer(reducer, JSON.parse(JSON.stringify(state.beans.settings)));\n  console.log('ITEMSS*******************', items);\n\n  const fileSave = async (fileName, object) => {\n    await overWriteFile(fileName, object);\n    dispatch({\n      type: 'setBeansSettings',\n      value: object\n    }); //setIsFileRead(false)\n  };\n\n  const addItem = (newItem, arrayOfItems) => {\n    //const tempVar = items\n    //arrayOfItems.push([newItem, true])\n    //setItems(arrayOfItems)\n    setItems({\n      type: 'addRow',\n      itemName: newItem\n    });\n    setTempItem('');\n    console.log(items);\n  }; // copied from the documentation:\n\n\n  function doReorder(itemsSort, event) {\n    // The `from` and `to` properties contain the index of the item\n    // when the drag started and ended, respectively\n    console.log('Dragged from index', event.detail.from, 'to', event.detail.to); // Finish the reorder and position the item in the DOM based on\n    // where the gesture ended. This method can also be called directly\n    // by the reorder group\n    //event.detail.complete();\n    //event.detail.complete(true);\n\n    const newIndex = event.detail.to;\n    const oldIndex = event.detail.from; //let newItems = [...itemsSort]\n\n    itemsSort = event.detail.complete(itemsSort); //setItems(itemsSort)\n\n    setItems({\n      type: 'swap',\n      value: itemsSort\n    }); //setItems({type:'test'})\n    //   console.log('tempits:',tempItems)\n  }\n\n  const delItem = (index, arrayToDeleteFrom) => {\n    //arrayToDeleteFrom.splice(index, 1)\n    //setItems(arrayToDeleteFrom)\n    setItems({\n      type: 'delRow',\n      index: index\n    });\n    forceUpdate();\n  };\n\n  const checkBox = (index, checkState, arrayToCheck) => {\n    // arrayToCheck[index][1]=checkState\n    // setItems(arrayToCheck)\n    setItems({\n      type: 'check',\n      index: index,\n      checkState: checkState\n    }); // return state[action.index][1] = action.checkState\n\n    console.log('Checkbox', items);\n  };\n\n  const displayItems = itemsToDisplay => {\n    const result = itemsToDisplay.map((arrayItem, index) => /*#__PURE__*/React.createElement(IonItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }\n    }, \" \", console.log('Arrayitem,index', arrayItem, index), /*#__PURE__*/React.createElement(IonCheckbox, {\n      slot: \"start\",\n      color: \"dark\",\n      checked: arrayItem[1],\n      name: index,\n      onIonChange: e => {\n        console.log('in map checkbox:', e.target.name);\n        checkBox(e.target.name, e.detail.checked, JSON.parse(JSON.stringify(items)));\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(IonLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }\n    }, arrayItem[0]), /*#__PURE__*/React.createElement(IonButton, {\n      color: \"dark\",\n      name: index,\n      onClick: e => delItem(e.target.name, JSON.parse(JSON.stringify(items))),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(IonIcon, {\n      icon: trash,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 31\n      }\n    })), /*#__PURE__*/React.createElement(IonReorder, {\n      slot: \"end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }\n    })));\n    return result;\n  };\n\n  console.log('itemsbefore display', items);\n  const toDisplay = displayItems(items);\n  return /*#__PURE__*/React.createElement(IonContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IonItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonLabel, {\n    slot: \"start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 17\n    }\n  }, \"Anzeigen\"), /*#__PURE__*/React.createElement(IonLabel, {\n    slot: \"end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 17\n    }\n  }, \"Reihenfolge\")), /*#__PURE__*/React.createElement(IonReorderGroup, {\n    disabled: false,\n    onIonItemReorder: e => doReorder(items, e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }\n  }, toDisplay), /*#__PURE__*/React.createElement(IonItem, {\n    class: \"ion-padding\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IonInput, {\n    background: \"dark\",\n    placeholder: \"Feld hinzuf\\xFCgen\",\n    onIonChange: e => setTempItem(e.detail.value),\n    value: tempItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(IonButton, {\n    color: \"dark\",\n    style: {\n      height: '35px',\n      width: '35px'\n    },\n    onClick: () => addItem(tempItem, items),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonIcon, {\n    icon: addCircle,\n    style: {\n      fontSize: '50px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(IonGrid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 22\n    }\n  }, /*#__PURE__*/React.createElement(IonCol, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 30\n    }\n  }, /*#__PURE__*/React.createElement(IonButton, {\n    color: \"dark\",\n    class: \"ion-text-capitalize\",\n    size: \"default\",\n    routerLink: \"./Home\",\n    onClick: () => {\n      fileSave(fileName, items);\n      /*setCounter(counter+1)*/\n\n      ;\n      /*setTempItems(items)*/\n\n      ;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonIcon, {\n    icon: save,\n    slot: \"start\",\n    size: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 22\n    }\n  }), \"Speichern\")), /*#__PURE__*/React.createElement(IonCol, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonButton, {\n    color: \"dark\",\n    class: \"ion-text-capitalize\",\n    size: \"default\",\n    onClick: () => setItems({\n      type: 'reset'\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonIcon, {\n    icon: close,\n    slot: \"start\",\n    size: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 22\n    }\n  }), \"Abbrechen\")))), \"  \");\n};","map":{"version":3,"sources":["/mnt/Data/Javascript_code/Ionic/coffee-db3/src/components/frontend/sort-items.js"],"names":["React","useEffect","useLayoutEffect","useContext","useState","useReducer","IonItem","IonReorder","IonReorderGroup","IonItemDivider","IonCheckbox","IonGrid","IonRow","IonCol","IonLabel","IonContent","IonButton","IonIcon","IonButtons","IonInput","IonTextarea","trash","save","close","addCircle","readSettings","overWriteFile","store","stat","SortItems","fileName","defaultSettings","globalState","state","dispatch","ignored","forceUpdate","x","tempItems","setTempItems","JSON","parse","stringify","beans","settings","tempItem","setTempItem","isFileRead","setIsFileRead","reducer","myState","action","console","log","tempArray","type","value","push","itemName","index","splice","checkState","Error","items","setItems","fileSave","object","addItem","newItem","arrayOfItems","doReorder","itemsSort","event","detail","from","to","newIndex","oldIndex","complete","delItem","arrayToDeleteFrom","checkBox","arrayToCheck","displayItems","itemsToDisplay","result","map","arrayItem","e","target","name","checked","toDisplay","height","width","fontSize"],"mappings":"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","sourcesContent":["import React, { useEffect, useLayoutEffect, useContext, useState, useReducer} from 'react'\nimport { IonItem, IonReorder, IonReorderGroup, IonItemDivider, IonCheckbox, IonGrid, IonRow, IonCol,\n    IonLabel, IonContent, IonButton, IonIcon, IonButtons, IonInput, IonTextarea } from '@ionic/react'\n\nimport { trash, save, close, addCircle } from 'ionicons/icons'\n\nimport { readSettings, overWriteFile } from '../backend/data'\nimport { store } from '../backend/store'\nimport { stat } from 'fs'\n\n// fields is the basic array of fields that's available upon installation\n/*\nconst fields = [\n    ['Bohne', true],\n    ['RÃ¶ster', true],\n    ['Kommentar', false]]\n\nconst fileName = 'data/beans-settings.data'\n*/\n\n\nexport const SortItems = (fileName, defaultSettings) => {\n    //ReactFunc()\n    const globalState = useContext(store)\n    const { state, dispatch } = globalState\n\n    const [ignored, forceUpdate] = useReducer(x => x + 1, 0) // this function will force an updated of the dom\n //   const [items, setItems] = useState(JSON.parse(JSON.stringify(state.beans.settings)))\n    const [tempItems, setTempItems] = useState(JSON.parse(JSON.stringify(state.beans.settings)))\n    const [tempItem, setTempItem] = useState('')\n    const [isFileRead, setIsFileRead] = useState(false)\n\n    const reducer = (myState, action) => {\n        console.log('REDUCERxxxxxx:', myState, action)\n        let tempArray = JSON.parse(JSON.stringify(myState))\n        switch (action.type){\n            case 'swap':\n                return action.value\n            case 'addRow':\n                tempArray.push([action.itemName, true])\n                console.log('TEMPARRAY in addROW', tempArray)\n                return tempArray\n            case 'delRow':\n                console.log('DELROW:', myState, action.index)\n                \n                //tempArray = JSON.parse(JSON.stringify(state))\n                tempArray.splice(action.index, 1)\n                return tempArray\n                //return state.splice(action.index, 1)\n            case 'check':\n                tempArray[action.index][1] = action.checkState\n                return tempArray\n                //return state[action.index][1] = action.checkState\n            case 'reset':\n                return JSON.parse(JSON.stringify(state.beans.settings))\n            //case 'test':\n              //  return console.log('------------ HEYHo***************') \n            default:\n                throw new Error()\n\n        }\n    }\n\n    \n    const [items, setItems] = useReducer(reducer, JSON.parse(JSON.stringify(state.beans.settings)))\n    console.log('ITEMSS*******************', items )\n  \n    const fileSave = async (fileName, object) => {\n        await overWriteFile(fileName, object)\n        dispatch({type: 'setBeansSettings', value: object})\n        //setIsFileRead(false)\n    }\n\n    const addItem = (newItem, arrayOfItems) => {\n        //const tempVar = items\n       \n        //arrayOfItems.push([newItem, true])\n        //setItems(arrayOfItems)\n        setItems({type: 'addRow', itemName: newItem})\n        setTempItem('')\n        console.log(items)\n        \n    }\n\n\n// copied from the documentation:\n    function doReorder(itemsSort, event) {\n\n        // The `from` and `to` properties contain the index of the item\n        // when the drag started and ended, respectively\n        console.log('Dragged from index', event.detail.from, 'to', event.detail.to);\n        // Finish the reorder and position the item in the DOM based on\n        // where the gesture ended. This method can also be called directly\n        // by the reorder group\n        //event.detail.complete();\n        //event.detail.complete(true);\n        const newIndex = event.detail.to\n        const oldIndex = event.detail.from\n        //let newItems = [...itemsSort]\n\n        itemsSort = event.detail.complete(itemsSort)\n\n        //setItems(itemsSort)\n        setItems({type: 'swap', value: itemsSort})\n       //setItems({type:'test'})\n     //   console.log('tempits:',tempItems)\n    }\n    const delItem = (index, arrayToDeleteFrom) => {\n\n        //arrayToDeleteFrom.splice(index, 1)\n        //setItems(arrayToDeleteFrom)\n        setItems({type:'delRow', index:index})\n\n        forceUpdate()\n    }\n\n    const checkBox = (index, checkState, arrayToCheck) => {\n\n        // arrayToCheck[index][1]=checkState\n        // setItems(arrayToCheck)\n        setItems({type:'check', index: index,    checkState: checkState})\n        // return state[action.index][1] = action.checkState\n\n        console.log('Checkbox',items)\n    }\n\n    \n    const displayItems = (itemsToDisplay) => {\n        const result = itemsToDisplay.map((arrayItem, index) => \n            <IonItem> {console.log('Arrayitem,index', arrayItem, index)}\n                <IonCheckbox slot='start' color='dark' checked={arrayItem[1]}\n                        name={index}\n                        onIonChange={ e => {console.log('in map checkbox:', e.target.name); checkBox(e.target.name, e.detail.checked, JSON.parse(JSON.stringify(items)) )} }/>\n                <IonLabel>{arrayItem[0]}</IonLabel>\n                <IonButton color='dark'\n                            name={index}\n                            onClick={ e => delItem(e.target.name, JSON.parse(JSON.stringify(items)) )}\n                            > <IonIcon icon={trash}/></IonButton>\n                <IonReorder slot='end'/>\n            </IonItem>\n            )\n    return result\n    }\n    console.log('itemsbefore display', items)\n    const toDisplay = displayItems(items)\n\n    return (\n        <IonContent>\n            <IonItem>\n                <IonLabel slot='start'>Anzeigen</IonLabel>\n                <IonLabel slot='end'>Reihenfolge</IonLabel>\n            </IonItem>\n            \n            <IonReorderGroup disabled={false}  onIonItemReorder={ (e) => doReorder(items, e)}>\n                {toDisplay}\n            </IonReorderGroup>\n        \n        <IonItem class='ion-padding'>\n            <IonInput background='dark'\n                    placeholder='Feld hinzufÃ¼gen'\n                    onIonChange={e => setTempItem(e.detail.value)} value={tempItem}></IonInput>\n            <IonButton color='dark' style={{height: '35px', width: '35px'}} \n                    onClick={() => addItem(tempItem,items)}>\n                    <IonIcon icon={addCircle} style={{fontSize: '50px'}}  />\n                    </IonButton>\n        </IonItem>\n\n            <IonGrid><IonRow><IonCol>\n            {/* Save */}\n            <IonButton color='dark'\n                    class=\"ion-text-capitalize\"\n                    size='default'\n                    routerLink='./Home'\n                    onClick={() => {fileSave(fileName, items); /*setCounter(counter+1)*/; /*setTempItems(items)*/; }}\n                    ><IonIcon icon={save} slot='start'size='large'/>Speichern</IonButton>\n            </IonCol>\n            <IonCol>\n            {/* Cancel */}          \n            <IonButton color='dark'\n                    class=\"ion-text-capitalize\"\n                    size='default'\n                   \n                    onClick={() => setItems({type:'reset'})}\n                    ><IonIcon icon={close} slot='start' size='large'/>Abbrechen</IonButton>\n            </IonCol></IonRow></IonGrid>  {/*routerLink='./Home'*/}\n        </IonContent>\n          \n    ) \n}"]},"metadata":{},"sourceType":"module"}