{"ast":null,"code":"var _jsxFileName = \"/mnt/Data/Javascript_code/Ionic/coffe-db/src/components/frontend/sort-items.js\";\nimport React, { useEffect, useLayoutEffect } from 'react';\nimport { IonItem, IonReorder, IonReorderGroup, IonItemDivider, IonCheckbox, IonGrid, IonRow, IonCol, IonLabel, IonContent, IonButton, IonIcon, IonButtons, IonInput, IonTextarea } from '@ionic/react';\nimport { trash, save, close, addCircle } from 'ionicons/icons';\nimport { useState, useReducer } from 'react';\nimport { delimiter } from 'path';\nimport { readSettings, overWriteFile } from '../backend/data';\nimport { read } from 'fs'; // fields is the basic array of fields that's available upon installation\n\n/*\nconst fields = [\n    ['Bohne', true],\n    ['RÃ¶ster', true],\n    ['Kommentar', false]]\n\nconst fileName = 'data/beans-settings.data'\n*/\n//let isFileRead = false\n//let fields = []\n\nexport const SortItems = (fileName, defaultSettings) => {\n  const [ignored, forceUpdate] = useReducer(x => x + 1, 0); // this function will force an updated of the dom\n\n  const [items, setItems] = useState([]);\n  const [tempItems, setTempItems] = useState([]); // deep copy fields\n\n  const [tempItem, setTempItem] = useState('');\n  const [counter, setCounter] = useState([0]); // counter is executed everytime save or cancel is presed. And will then be used to run the useeffect hook on the next render and reload the file setting \n\n  const fileRead = async () => {\n    let fields = [];\n    console.log('i m in fields'); //let fields = []\n\n    let fileContent = await readSettings(fileName);\n    console.log('filecontent:', fileContent);\n\n    if (fileContent) {\n      //if filename doesn't exist readSettings will return false    \n      fields = JSON.parse(fileContent);\n      console.log('fields:', fields);\n    } else {\n      fields = defaultSettings;\n    }\n\n    setItems(fields);\n    setTempItems(fields);\n  };\n\n  useLayoutEffect(() => {\n    fileRead();\n    console.log('USE effect hook');\n  }, [counter]); //fileRead()  //will be always loaded the page is opened, or on every rerender? Dangerous if rerender!\n\n  const fileSave = async (fileName, object) => {\n    await overWriteFile(fileName, object);\n  };\n\n  const addItem = (newItem, arrayOfItems) => {\n    //const tempVar = items\n    arrayOfItems.push([newItem, true]);\n    setItems(arrayOfItems);\n    setTempItem('');\n    console.log(items);\n  }; // copied from the documentation:\n\n\n  function doReorder(itemsSort, event) {\n    // The `from` and `to` properties contain the index of the item\n    // when the drag started and ended, respectively\n    console.log('Dragged from index', event.detail.from, 'to', event.detail.to); // Finish the reorder and position the item in the DOM based on\n    // where the gesture ended. This method can also be called directly\n    // by the reorder group\n    //event.detail.complete();\n    //event.detail.complete(true);\n\n    const newIndex = event.detail.to;\n    const oldIndex = event.detail.from; //let newItems = [...itemsSort]\n\n    itemsSort = event.detail.complete(itemsSort);\n    setItems(itemsSort);\n  }\n\n  const delItem = (index, arrayToDeleteFrom) => {\n    arrayToDeleteFrom.splice(index, 1);\n    setItems(arrayToDeleteFrom);\n    forceUpdate();\n  };\n\n  const checkBox = (index, state, arrayToCheck) => {\n    arrayToCheck[index][1] = state;\n    setItems(arrayToCheck);\n    console.log(items);\n  }; // useEffect(()=> console.log('USE EFFECT'), [])\n\n\n  const displayItems = itemsToDisplay => {\n    const result = itemsToDisplay.map((arrayItem, index) => /*#__PURE__*/React.createElement(IonItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(IonCheckbox, {\n      slot: \"start\",\n      color: \"dark\",\n      checked: arrayItem[1],\n      name: index,\n      onIonChange: e => checkBox(e.target.name, e.detail.checked, items),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(IonLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }\n    }, arrayItem[0]), /*#__PURE__*/React.createElement(IonButton, {\n      color: \"dark\",\n      name: index,\n      onClick: e => delItem(e.target.name, items),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(IonIcon, {\n      icon: trash,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 31\n      }\n    })), /*#__PURE__*/React.createElement(IonReorder, {\n      slot: \"end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }\n    })));\n    return result;\n  };\n\n  return /*#__PURE__*/React.createElement(IonContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IonItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonLabel, {\n    slot: \"start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }\n  }, \"Anzeigen\"), /*#__PURE__*/React.createElement(IonLabel, {\n    slot: \"end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    }\n  }, \"Reihenfolge\")), /*#__PURE__*/React.createElement(IonReorderGroup, {\n    disabled: false,\n    onIonItemReorder: e => doReorder(items, e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }, displayItems(items)), /*#__PURE__*/React.createElement(IonItem, {\n    class: \"ion-padding\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IonInput, {\n    background: \"dark\",\n    placeholder: \"Feld hinzuf\\xFCgen\",\n    onIonChange: e => setTempItem(e.detail.value),\n    value: tempItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(IonButton, {\n    color: \"dark\",\n    style: {\n      height: '35px',\n      width: '35px'\n    },\n    onClick: () => addItem(tempItem, items),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonIcon, {\n    icon: addCircle,\n    style: {\n      fontSize: '50px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(IonGrid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 22\n    }\n  }, /*#__PURE__*/React.createElement(IonCol, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 30\n    }\n  }, /*#__PURE__*/React.createElement(IonButton, {\n    color: \"dark\",\n    class: \"ion-text-capitalize\",\n    size: \"default\",\n    routerLink: \"./Home\",\n    onClick: () => {\n      fileSave(fileName, items);\n      setCounter(counter + 1);\n      /*isFileRead=false*/\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonIcon, {\n    icon: save,\n    slot: \"start\",\n    size: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 22\n    }\n  }), \"Speichern\")), /*#__PURE__*/React.createElement(IonCol, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonButton, {\n    color: \"dark\",\n    class: \"ion-text-capitalize\",\n    size: \"default\",\n    routerLink: \"./Home\",\n    onClick: () => {\n      setItems(tempItems);\n      console.log('tempitems:', tempItems);\n      setCounter(counter + 1);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonIcon, {\n    icon: close,\n    slot: \"start\",\n    size: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 22\n    }\n  }), \"Abbrechen\")))));\n};","map":{"version":3,"sources":["/mnt/Data/Javascript_code/Ionic/coffe-db/src/components/frontend/sort-items.js"],"names":["React","useEffect","useLayoutEffect","IonItem","IonReorder","IonReorderGroup","IonItemDivider","IonCheckbox","IonGrid","IonRow","IonCol","IonLabel","IonContent","IonButton","IonIcon","IonButtons","IonInput","IonTextarea","trash","save","close","addCircle","useState","useReducer","delimiter","readSettings","overWriteFile","read","SortItems","fileName","defaultSettings","ignored","forceUpdate","x","items","setItems","tempItems","setTempItems","tempItem","setTempItem","counter","setCounter","fileRead","fields","console","log","fileContent","JSON","parse","fileSave","object","addItem","newItem","arrayOfItems","push","doReorder","itemsSort","event","detail","from","to","newIndex","oldIndex","complete","delItem","index","arrayToDeleteFrom","splice","checkBox","state","arrayToCheck","displayItems","itemsToDisplay","result","map","arrayItem","e","target","name","checked","value","height","width","fontSize"],"mappings":"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","sourcesContent":["import React, { useEffect, useLayoutEffect} from 'react'\nimport { IonItem, IonReorder, IonReorderGroup, IonItemDivider, IonCheckbox, IonGrid, IonRow, IonCol,\n    IonLabel, IonContent, IonButton, IonIcon, IonButtons, IonInput, IonTextarea } from '@ionic/react'\n\nimport { trash, save, close, addCircle } from 'ionicons/icons'\n\nimport { useState, useReducer } from 'react'\nimport { delimiter } from 'path'\n\nimport { readSettings, overWriteFile } from '../backend/data'\nimport { read } from 'fs'\n\n// fields is the basic array of fields that's available upon installation\n/*\nconst fields = [\n    ['Bohne', true],\n    ['RÃ¶ster', true],\n    ['Kommentar', false]]\n\nconst fileName = 'data/beans-settings.data'\n*/\n//let isFileRead = false\n\n//let fields = []\n\n\n\nexport const SortItems = (fileName, defaultSettings) => {\n    \n    const [ignored, forceUpdate] = useReducer(x => x + 1, 0) // this function will force an updated of the dom\n    const [items, setItems] = useState([])\n    const [tempItems, setTempItems] = useState([]) // deep copy fields\n    const [tempItem, setTempItem] = useState('')\n    const [counter, setCounter] = useState([0])\n    // counter is executed everytime save or cancel is presed. And will then be used to run the useeffect hook on the next render and reload the file setting \n\n    const fileRead = async () => {\n        let fields = []\n        console.log('i m in fields')\n        //let fields = []\n        let fileContent =  await readSettings(fileName)\n        console.log('filecontent:', fileContent)\n        if (fileContent) {   //if filename doesn't exist readSettings will return false    \n            fields = JSON.parse(fileContent)\n            console.log('fields:', fields)\n        } else {\n            fields = defaultSettings\n        }\n        setItems(fields)\n        setTempItems(fields)\n\n    }\n    useLayoutEffect( () => {fileRead(); console.log('USE effect hook')}, [counter])\n\n\n    //fileRead()  //will be always loaded the page is opened, or on every rerender? Dangerous if rerender!\n    \n    const fileSave = async (fileName, object) => {\n        await overWriteFile(fileName, object)\n    }\n\n    const addItem = (newItem, arrayOfItems) => {\n        //const tempVar = items\n        arrayOfItems.push([newItem, true])\n        setItems(arrayOfItems)\n        setTempItem('')\n        console.log(items)\n        \n    }\n\n\n// copied from the documentation:\n    function doReorder(itemsSort, event) {\n\n        // The `from` and `to` properties contain the index of the item\n        // when the drag started and ended, respectively\n        console.log('Dragged from index', event.detail.from, 'to', event.detail.to);\n        // Finish the reorder and position the item in the DOM based on\n        // where the gesture ended. This method can also be called directly\n        // by the reorder group\n        //event.detail.complete();\n        //event.detail.complete(true);\n        const newIndex = event.detail.to\n        const oldIndex = event.detail.from\n        //let newItems = [...itemsSort]\n\n        itemsSort = event.detail.complete(itemsSort)\n        setItems(itemsSort)\n    }\n    const delItem = (index, arrayToDeleteFrom) => {\n        arrayToDeleteFrom.splice(index, 1)\n        setItems(arrayToDeleteFrom)\n        forceUpdate()\n    }\n\n    const checkBox = (index, state, arrayToCheck) => {\n        arrayToCheck[index][1]=state\n        setItems(arrayToCheck)\n        console.log(items)\n    }\n\n   // useEffect(()=> console.log('USE EFFECT'), [])\n\n    const displayItems = (itemsToDisplay) => {\n        const result = itemsToDisplay.map((arrayItem, index) => \n            <IonItem>\n                <IonCheckbox slot='start' color='dark' checked={arrayItem[1]}\n                        name={index}\n                        onIonChange={ e => checkBox(e.target.name, e.detail.checked, items) }/>\n                <IonLabel>{arrayItem[0]}</IonLabel>\n                <IonButton color='dark'\n                            name={index}\n                            onClick={ e => delItem(e.target.name, items)}\n                            > <IonIcon icon={trash}/></IonButton>\n                <IonReorder slot='end'/>\n            </IonItem>\n            )\n    return result\n    }\n\n\n    return (\n        <IonContent>\n            <IonItem>\n                <IonLabel slot='start'>Anzeigen</IonLabel>\n                <IonLabel slot='end'>Reihenfolge</IonLabel>\n            </IonItem>\n            \n            <IonReorderGroup disabled={false}  onIonItemReorder={ (e) => doReorder(items, e)}>\n                {displayItems(items)}\n            </IonReorderGroup>\n        \n        <IonItem class='ion-padding'>\n            <IonInput background='dark'\n                    placeholder='Feld hinzufÃ¼gen'\n                    onIonChange={e => setTempItem(e.detail.value)} value={tempItem}></IonInput>\n            <IonButton color='dark' style={{height: '35px', width: '35px'}} \n                    onClick={() => addItem(tempItem,items)}>\n                    <IonIcon icon={addCircle} style={{fontSize: '50px'}}  />\n                    </IonButton>\n        </IonItem>\n\n            <IonGrid><IonRow><IonCol>\n            <IonButton color='dark'\n                    class=\"ion-text-capitalize\"\n                    size='default'\n                    routerLink='./Home'\n                    onClick={() => {fileSave(fileName, items); setCounter(counter+1)/*isFileRead=false*/}}\n                    ><IonIcon icon={save} slot='start'size='large'/>Speichern</IonButton>\n            </IonCol>\n            <IonCol>          \n            <IonButton color='dark'\n                    class=\"ion-text-capitalize\"\n                    size='default'\n                    routerLink='./Home'\n                    onClick={() => {setItems(tempItems); console.log('tempitems:', tempItems); setCounter(counter+1)}}\n                    ><IonIcon icon={close} slot='start' size='large'/>Abbrechen</IonButton>\n            </IonCol></IonRow></IonGrid>\n        </IonContent>\n          \n\n    )\n}"]},"metadata":{},"sourceType":"module"}