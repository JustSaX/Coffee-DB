{"ast":null,"code":"import _regeneratorRuntime from\"/mnt/Data/Javascript_code/Ionic/coffee-db4/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/mnt/Data/Javascript_code/Ionic/coffee-db4/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{Plugins,FilesystemDirectory,FilesystemEncoding,Capacitor}from'@capacitor/core';import{idCreator,dateCreator,timeCreator}from'./idcreator';var Filesystem=Plugins.Filesystem;var fileSettingsRead={path:'',//path  needs to be set in each function\ndirectory:FilesystemDirectory.External,encoding:FilesystemEncoding.UTF8};var fileSettingsWrite={path:'',//path and data needs to be set in each function\ndata:'',directory:FilesystemDirectory.External,encoding:FilesystemEncoding.UTF8,recursive:true//create folders if they don't exist\n};var fileSettingsReadPicture={path:'',//path  needs to be set in each function\ndirectory:FilesystemDirectory.External};var fileSettingsWritePicture={path:'',//path and data needs to be set in each function\ndata:'',directory:FilesystemDirectory.External,recursive:true//create folders if they don't exist\n};//************************\n//Writing or storing Data\n//************************\n//dataset needs to be an object and not an array!\nexport var storeData=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(filename,dataset,photo){var id,date,time,object,path,photoFilename;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:id=idCreator();date=dateCreator();time=timeCreator();//const object = {[id]:dataset}\nobject={id:id,Datum:date,Uhrzeit:time};Object.assign(object,dataset);_context.next=7;return writeFile(filename,object);case 7:if(!photo){_context.next=12;break;}//filename contains something like data/beans.data, split will split the string into\n//[data, beans.data] and save data into path => [0] is the first element of the array created by split\npath=filename.split('/')[0];photoFilename=path+'/'+id.toString()+'.jpeg';_context.next=12;return writePhoto(photoFilename,photo);case 12:return _context.abrupt(\"return\",object);case 13:case\"end\":return _context.stop();}}},_callee);}));return function storeData(_x,_x2,_x3){return _ref.apply(this,arguments);};}();var writeFile=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(filename,object){var dataToWrite,ret,append,write;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:dataToWrite=JSON.stringify(object);// try to open the file if it exists, append if not create it\n_context2.prev=1;_context2.next=4;return Filesystem.readFile({path:filename,directory:FilesystemDirectory.External});case 4:ret=_context2.sent;_context2.next=7;return Filesystem.appendFile({path:filename,data:'\\n'+dataToWrite,directory:FilesystemDirectory.External,encoding:FilesystemEncoding.UTF8});case 7:append=_context2.sent;_context2.next=16;break;case 10:_context2.prev=10;_context2.t0=_context2[\"catch\"](1);if(!_context2.t0.message.includes('File does not exist')){_context2.next=16;break;}_context2.next=15;return Filesystem.writeFile({path:filename,data:dataToWrite,directory:FilesystemDirectory.External,//set back to external!\nencoding:FilesystemEncoding.UTF8,recursive:true//create folders if they don't exist\n});case 15:write=_context2.sent;case 16:case\"end\":return _context2.stop();}}},_callee2,null,[[1,10]]);}));return function writeFile(_x4,_x5){return _ref2.apply(this,arguments);};}();//writing picture to file\nvar writePhoto=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(filename,photo){var fileSettingsWriteCopy,fileSettingsReadCopy;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:fileSettingsWriteCopy=Object.assign({},fileSettingsWritePicture);//careful shallow copy\nfileSettingsWriteCopy.path=filename;fileSettingsWriteCopy.data=photo.dataUrl;_context3.next=5;return Filesystem.writeFile(fileSettingsWriteCopy);case 5:fileSettingsWriteCopy.encoding=_context3.sent;_context3.prev=6;fileSettingsReadCopy=Object.assign({},fileSettingsReadPicture);//carfeul shallow copy\nfileSettingsReadCopy.path='./Pictures';fileSettingsReadCopy.recursive=true;_context3.next=12;return Filesystem.rmdir(fileSettingsReadCopy);case 12:_context3.next=17;break;case 14:_context3.prev=14;_context3.t0=_context3[\"catch\"](6);console.log(_context3.t0);case 17:case\"end\":return _context3.stop();}}},_callee3,null,[[6,14]]);}));return function writePhoto(_x6,_x7){return _ref3.apply(this,arguments);};}();//writing settings to file, if file does exist it will be overwritten\nexport var overWriteFile=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(filename,object){var fileSettingsWriteCopy,write;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:fileSettingsWriteCopy=Object.assign({},fileSettingsWrite);//careful shwallow copy\nfileSettingsWriteCopy.path=filename;fileSettingsWriteCopy.data=JSON.stringify(object);_context4.next=5;return Filesystem.writeFile(fileSettingsWriteCopy);case 5:write=_context4.sent;case 6:case\"end\":return _context4.stop();}}},_callee4);}));return function overWriteFile(_x8,_x9){return _ref4.apply(this,arguments);};}();//************************\n//Reading Data\n//************************\n// reading data from file, if file doesn't exist return false\nexport var readData=/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(filename){var readFile;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:readFile='';_context5.prev=1;_context5.next=4;return Filesystem.readFile({path:filename,directory:FilesystemDirectory.External,encoding:FilesystemEncoding.UTF8});case 4:readFile=_context5.sent;_context5.next=10;break;case 7:_context5.prev=7;_context5.t0=_context5[\"catch\"](1);return _context5.abrupt(\"return\",false);case 10:return _context5.abrupt(\"return\",readFile.data);case 11:case\"end\":return _context5.stop();}}},_callee5,null,[[1,7]]);}));return function readData(_x10){return _ref5.apply(this,arguments);};}();//reading data from File, if file doesn't exist false will be returned\nexport var readSettings=/*#__PURE__*/function(){var _ref6=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee6(filename){var fileSettingsReadCopy,readFile;return _regeneratorRuntime.wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:fileSettingsReadCopy=Object.assign({},fileSettingsRead);fileSettingsReadCopy.path=filename;readFile='';_context6.prev=3;_context6.next=6;return Filesystem.readFile(fileSettingsReadCopy);case 6:readFile=_context6.sent;_context6.next=12;break;case 9:_context6.prev=9;_context6.t0=_context6[\"catch\"](3);return _context6.abrupt(\"return\",false);case 12:return _context6.abrupt(\"return\",readFile.data);case 13:case\"end\":return _context6.stop();}}},_callee6,null,[[3,9]]);}));return function readSettings(_x11){return _ref6.apply(this,arguments);};}();export var readPicture=/*#__PURE__*/function(){var _ref7=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee7(filename){var fileSettingsReadCopy,fileExists,filenameSplit,filenameNoPath,path,fileObj,directoryContent,readPicData;return _regeneratorRuntime.wrap(function _callee7$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:fileSettingsReadCopy=Object.assign({},fileSettingsReadPicture);fileSettingsReadCopy.path=filename;if(!(filename.length>0)){_context7.next=11;break;}filenameSplit=filename.split('/');filenameNoPath=filenameSplit.pop();path=filenameSplit.map(function(item){return'/'+item;})[0];fileObj={path:path,directory:fileSettingsReadCopy.directory};_context7.next=9;return Filesystem.readdir(fileObj);case 9:directoryContent=_context7.sent;fileExists=directoryContent.files.includes(filenameNoPath);//will return index or undefined\ncase 11:if(!fileExists){_context7.next=24;break;}_context7.prev=12;_context7.next=15;return Filesystem.getUri(fileSettingsReadCopy);case 15:readPicData=_context7.sent;_context7.next=21;break;case 18:_context7.prev=18;_context7.t0=_context7[\"catch\"](12);return _context7.abrupt(\"return\",false);case 21:readPicData=Capacitor.convertFileSrc(readPicData.uri);_context7.next=25;break;case 24:readPicData=false;case 25:return _context7.abrupt(\"return\",readPicData);case 26:case\"end\":return _context7.stop();}}},_callee7,null,[[12,18]]);}));return function readPicture(_x12){return _ref7.apply(this,arguments);};}();","map":{"version":3,"sources":["/mnt/Data/Javascript_code/Ionic/coffee-db4/src/components/backend/data.js"],"names":["Plugins","FilesystemDirectory","FilesystemEncoding","Capacitor","idCreator","dateCreator","timeCreator","Filesystem","fileSettingsRead","path","directory","External","encoding","UTF8","fileSettingsWrite","data","recursive","fileSettingsReadPicture","fileSettingsWritePicture","storeData","filename","dataset","photo","id","date","time","object","Datum","Uhrzeit","Object","assign","writeFile","split","photoFilename","toString","writePhoto","dataToWrite","JSON","stringify","readFile","ret","appendFile","append","message","includes","write","fileSettingsWriteCopy","dataUrl","fileSettingsReadCopy","rmdir","console","log","overWriteFile","readData","readSettings","readPicture","length","filenameSplit","filenameNoPath","pop","map","item","fileObj","readdir","directoryContent","fileExists","files","getUri","readPicData","convertFileSrc","uri"],"mappings":"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","sourcesContent":["\nimport { Plugins, FilesystemDirectory, FilesystemEncoding, Capacitor } from '@capacitor/core'\nimport { idCreator, dateCreator, timeCreator } from './idcreator'\n\n\nconst { Filesystem } = Plugins\n\n\nconst fileSettingsRead = {\n  path: '',  //path  needs to be set in each function\n  directory: FilesystemDirectory.External,\n  encoding: FilesystemEncoding.UTF8,\n}\n\nconst fileSettingsWrite= {\n  path: '',  //path and data needs to be set in each function\n  data: '',\n  directory: FilesystemDirectory.External,\n  encoding: FilesystemEncoding.UTF8,\n  recursive: true    //create folders if they don't exist\n}\n\nconst fileSettingsReadPicture = {\n  path: '',  //path  needs to be set in each function\n  directory: FilesystemDirectory.External,\n}\n\nconst fileSettingsWritePicture = {\n  path: '',  //path and data needs to be set in each function\n  data: '',\n  directory: FilesystemDirectory.External,\n  recursive: true    //create folders if they don't exist\n}\n\n\n//************************\n//Writing or storing Data\n//************************\n\n\n//dataset needs to be an object and not an array!\nexport const storeData = async (filename, dataset, photo) => {\n   const id = idCreator()\n   const date = dateCreator()\n   const time = timeCreator()\n\n    //const object = {[id]:dataset}\n   const object = {id: id,\n                  Datum: date,\n                  Uhrzeit: time}\n   Object.assign(object, dataset)\n\n  await writeFile(filename, object)\n\n  if(photo) {\n    //filename contains something like data/beans.data, split will split the string into\n    //[data, beans.data] and save data into path => [0] is the first element of the array created by split\n    const path = filename.split('/')[0]\n    const photoFilename = path +'/'+ id.toString() +'.jpeg'\n    await writePhoto(photoFilename, photo)\n  }\n\nreturn object\n} \n\nconst writeFile = async (filename, object) => {\n    let dataToWrite = JSON.stringify(object)\n\n    // try to open the file if it exists, append if not create it\n    try {\n        const ret = await Filesystem.readFile({\n          path: filename,\n          directory: FilesystemDirectory.External\n        })\n        const append = await Filesystem.appendFile({\n            path: filename,\n            data: '\\n'+ dataToWrite,\n            directory: FilesystemDirectory.External,\n            encoding: FilesystemEncoding.UTF8,\n        })\n \n      } catch (e) {\n\n        if (e.message.includes('File does not exist')){\n          const write = await Filesystem.writeFile({\n              path: filename,\n              data: dataToWrite,\n              directory: FilesystemDirectory.External,  //set back to external!\n              encoding: FilesystemEncoding.UTF8,\n              recursive: true    //create folders if they don't exist\n         })\n\n        }\n     }\n}\n\n\n//writing picture to file\nconst writePhoto = async (filename, photo) => {\n  let fileSettingsWriteCopy = Object.assign({}, fileSettingsWritePicture) //careful shallow copy\n  fileSettingsWriteCopy.path = filename\n  fileSettingsWriteCopy.data = photo.dataUrl\n  fileSettingsWriteCopy.encoding = \n\n  await Filesystem.writeFile(fileSettingsWriteCopy)\n  //delete picture made by system\n  try {\n    let fileSettingsReadCopy = Object.assign({}, fileSettingsReadPicture) //carfeul shallow copy\n    fileSettingsReadCopy.path = './Pictures'\n    fileSettingsReadCopy.recursive = true\n    await Filesystem.rmdir(fileSettingsReadCopy)\n  } catch(e){\n    console.log(e)\n  }\n}\n\n//writing settings to file, if file does exist it will be overwritten\nexport const overWriteFile = async (filename, object) => {\n let fileSettingsWriteCopy = Object.assign({}, fileSettingsWrite) //careful shwallow copy\n  fileSettingsWriteCopy.path = filename\n  fileSettingsWriteCopy.data = JSON.stringify(object)\n\n  const write = await Filesystem.writeFile(fileSettingsWriteCopy)\n}\n\n//************************\n//Reading Data\n//************************\n\n// reading data from file, if file doesn't exist return false\nexport const readData = async (filename) => {\n  let readFile = ''\n  try {\n  readFile = await Filesystem.readFile({\n    path: filename,\n    directory: FilesystemDirectory.External,\n    encoding: FilesystemEncoding.UTF8\n  })\n} catch (e){\n  return false\n}\n  return readFile.data\n  }\n\n\n\n//reading data from File, if file doesn't exist false will be returned\nexport const readSettings = async (filename) => {\n  let fileSettingsReadCopy = Object.assign({}, fileSettingsRead)\n  fileSettingsReadCopy.path = filename\n  let readFile = ''\n  try {\n    readFile = await Filesystem.readFile(fileSettingsReadCopy)\n  } catch(e){\n    return false\n  }\n  return readFile.data\n}\n\n\n\n  \nexport const readPicture = async (filename) => {\n\n\n    let fileSettingsReadCopy = Object.assign({}, fileSettingsReadPicture)\n    fileSettingsReadCopy.path = filename\n    \n    let fileExists\n    if (filename.length > 0){\n      const filenameSplit = filename.split('/')\n \n      const filenameNoPath = filenameSplit.pop()\n\n      const path = filenameSplit.map( item => '/'+item)[0]\n      \n      const fileObj = {\n        path: path,\n        directory: fileSettingsReadCopy.directory\n      }\n\n      const directoryContent = await Filesystem.readdir(fileObj)\n\n      \n        fileExists = directoryContent.files.includes(filenameNoPath)\n        //will return index or undefined\n    }\n\n    let readPicData\n    if (fileExists){  \n      try {\n        readPicData = await Filesystem.getUri(fileSettingsReadCopy)\n\n      } catch(e){\n\n        return false\n      }\n      readPicData = Capacitor.convertFileSrc(readPicData.uri)\n    } else readPicData = false\n\n    return readPicData\n}\n"]},"metadata":{},"sourceType":"module"}