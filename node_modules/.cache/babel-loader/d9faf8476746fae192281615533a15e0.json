{"ast":null,"code":"var _jsxFileName = \"/mnt/Data/Javascript_code/Ionic/coffe-db/src/pages/Add-beans.js\";\n//import './My-Style.css'\nimport React from 'react';\nimport { IonPage, IonCard, IonHeader, IonToolbar, IonBackButton, IonContent, IonTitle, IonButtons, IonTextarea, IonButton, IonCardContent, IonLabel, IonItem, IonInput } from '@ionic/react';\nimport { readSettings, readData, createTable } from '../components/backend/data';\nimport { AddItems } from '../components/frontend/add-items';\nimport { beansDefault } from '../components/objects/default-values';\nimport { beansSettingsFileName, beansDataFileName } from '../components/objects/filenames';\nimport { dynamicData } from '../components/frontend/create-table';\nconst fileName = beansSettingsFileName;\nlet fields = [];\n\nconst fileSettingsRead = async () => {\n  //let fields = []\n  let fileContent = await readSettings(fileName);\n  console.log('filecontent:', fileContent);\n\n  if (fileContent) {\n    //if filename doesn't exist readSettings will return false    \n    fields = JSON.parse(fileContent); // console.log('fields:', fields)\n  } else {\n    fields = beansDefault;\n  }\n};\n\nlet test = fileSettingsRead();\n/*\nlet savedData = []\nlet header = []\nlet fileExists = false\nconst readSavedData = async () => {\n    let fileContent = await readData(beansDataFileName)\n    if (fileContent){\n        [header, savedData] = createTable(fileContent)\n        fileExists = true\n    } else fileExists = false\n}\nreadSavedData()\n*/\n\nexport const AddBeans = async () => {\n  return /*#__PURE__*/React.createElement(IonPage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IonHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonToolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(IonButtons, {\n    slot: \"start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(IonBackButton, {\n    defaultHref: \"home\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 28\n    }\n  })), /*#__PURE__*/React.createElement(IonTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, \"Bohne erfassen\"))), /*#__PURE__*/React.createElement(IonContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonCard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(IonCardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }\n  }, AddItems(fields))), /*#__PURE__*/React.createElement(IonItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  })));\n};","map":{"version":3,"sources":["/mnt/Data/Javascript_code/Ionic/coffe-db/src/pages/Add-beans.js"],"names":["React","IonPage","IonCard","IonHeader","IonToolbar","IonBackButton","IonContent","IonTitle","IonButtons","IonTextarea","IonButton","IonCardContent","IonLabel","IonItem","IonInput","readSettings","readData","createTable","AddItems","beansDefault","beansSettingsFileName","beansDataFileName","dynamicData","fileName","fields","fileSettingsRead","fileContent","console","log","JSON","parse","test","AddBeans"],"mappings":";AAAA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,EAAkBC,OAAlB,EAA2BC,SAA3B,EAAsCC,UAAtC,EAAkDC,aAAlD,EAAiEC,UAAjE,EAA6EC,QAA7E,EAAuFC,UAAvF,EAAmGC,WAAnG,EACIC,SADJ,EACeC,cADf,EAC+BC,QAD/B,EACyCC,OADzC,EACkDC,QADlD,QACiE,cADjE;AAGA,SAASC,YAAT,EAAuBC,QAAvB,EAAiCC,WAAjC,QAAmD,4BAAnD;AACA,SAASC,QAAT,QAAyB,kCAAzB;AACA,SAASC,YAAT,QAA6B,sCAA7B;AACA,SAASC,qBAAT,EAAgCC,iBAAhC,QAAyD,iCAAzD;AACA,SAASC,WAAT,QAA4B,qCAA5B;AAGA,MAAMC,QAAQ,GAAGH,qBAAjB;AAEA,IAAII,MAAM,GAAG,EAAb;;AACA,MAAMC,gBAAgB,GAAG,YAAY;AACjC;AACA,MAAIC,WAAW,GAAI,MAAMX,YAAY,CAACQ,QAAD,CAArC;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BF,WAA5B;;AACA,MAAIA,WAAJ,EAAiB;AAAI;AACjBF,IAAAA,MAAM,GAAGK,IAAI,CAACC,KAAL,CAAWJ,WAAX,CAAT,CADa,CAEd;AACF,GAHD,MAGO;AACHF,IAAAA,MAAM,GAAGL,YAAT;AACH;AACJ,CAVD;;AAWA,IAAIY,IAAI,GAAGN,gBAAgB,EAA3B;AAEA;;;;;;;;;;;;;;AAgBA,OAAO,MAAMO,QAAQ,GAAG,YAAY;AAChC,sBACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACQ,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACG,oBAAC,aAAD;AAAe,IAAA,WAAW,EAAC,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,CADR,eAIA,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJA,CADJ,CADJ,eASI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKd,QAAQ,CAACM,MAAD,CADb,CADJ,CADJ,eAMI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,CATJ,CADJ;AAuBH,CAxBM","sourcesContent":["//import './My-Style.css'\n\nimport React from 'react'\nimport { IonPage, IonCard, IonHeader, IonToolbar, IonBackButton, IonContent, IonTitle, IonButtons, IonTextarea,\n    IonButton ,IonCardContent, IonLabel, IonItem, IonInput} from '@ionic/react'\n\nimport { readSettings, readData, createTable} from '../components/backend/data'\nimport { AddItems } from '../components/frontend/add-items'\nimport { beansDefault } from '../components/objects/default-values'\nimport { beansSettingsFileName, beansDataFileName } from '../components/objects/filenames'\nimport { dynamicData } from '../components/frontend/create-table'\n\n\nconst fileName = beansSettingsFileName\n\nlet fields = []\nconst fileSettingsRead = async () => {\n    //let fields = []\n    let fileContent =  await readSettings(fileName)\n    console.log('filecontent:', fileContent)\n    if (fileContent) {   //if filename doesn't exist readSettings will return false    \n        fields = JSON.parse(fileContent)\n       // console.log('fields:', fields)\n    } else {\n        fields = beansDefault\n    }\n}   \nlet test = fileSettingsRead()\n\n/*\nlet savedData = []\nlet header = []\nlet fileExists = false\nconst readSavedData = async () => {\n    let fileContent = await readData(beansDataFileName)\n    if (fileContent){\n        [header, savedData] = createTable(fileContent)\n        fileExists = true\n    } else fileExists = false\n}\nreadSavedData()\n*/\n\n\n\nexport const AddBeans = async () => {\n    return (\n        <IonPage>\n            <IonHeader>\n                <IonToolbar>\n                        <IonButtons slot='start'>\n                           <IonBackButton defaultHref='home'/>\n                        </IonButtons>\n                <IonTitle>Bohne erfassen</IonTitle>\n                </IonToolbar>\n                </IonHeader>\n            <IonContent>\n                <IonCard>\n                    <IonCardContent>\n                        {AddItems(fields)}\n                    </IonCardContent>\n                </IonCard>\n                <IonItem></IonItem>\n                \n                {/*fileExists && dynamicData(savedData)*/}\n\n            </IonContent>\n        </IonPage>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}