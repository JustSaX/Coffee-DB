{"ast":null,"code":"var _jsxFileName = \"/mnt/Data/Javascript_code/Ionic/coffee-db4/src/components/backend/store.js\";\n// store.js\n// https://blog.logrocket.com/use-hooks-and-context-not-react-and-redux/\nimport React, { createContext, useReducer } from 'react'; // initialState is the blue print of my 'State' Object\n\nconst initialState = {\n  beans: {\n    settings: [],\n    data: [],\n    pics: []\n  },\n  brews: {\n    settings: [],\n    data: [],\n    pics: []\n  }\n}; //pics contains the link to the stored pictures of brews and beans\n\nconst store = createContext(initialState);\nconst {\n  Provider\n} = store;\n\nconst StateProvider = ({\n  children\n}) => {\n  const [state, dispatch] = useReducer((state, action) => {\n    let newState;\n\n    switch (action.type) {\n      /*case 'setBeansSettings' */\n      case 'setBeansData':\n        state.beans.data = action.value;\n        newState = state;\n        return newState;\n\n      case 'setBeansSettings':\n        state.beans.settings = action.value;\n        newState = state;\n        return state;\n\n      case 'setBeansPics':\n        state.beans.pics = action.value;\n        newState = state;\n        return state;\n\n      case 'setBrewsData':\n        state.brews.data = action.value;\n        newState = state;\n        return state;\n\n      case 'setBrewsSettings':\n        state.brews.settings = action.value;\n        newState = state;\n        return state;\n\n      case 'setBrewsPics':\n        state.brews.pics = action.value;\n        newState = state;\n        return state;\n\n      default:\n        throw new Error();\n    }\n\n    ;\n  }, initialState);\n  return /*#__PURE__*/React.createElement(Provider, {\n    value: {\n      state,\n      dispatch\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 10\n    }\n  }, children);\n};\n\nexport { store, StateProvider };","map":{"version":3,"sources":["/mnt/Data/Javascript_code/Ionic/coffee-db4/src/components/backend/store.js"],"names":["React","createContext","useReducer","initialState","beans","settings","data","pics","brews","store","Provider","StateProvider","children","state","dispatch","action","newState","type","value","Error"],"mappings":";AAAA;AACA;AAEA,OAAOA,KAAP,IAAeC,aAAf,EAA8BC,UAA9B,QAA+C,OAA/C,C,CAGA;;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAG;AACNC,IAAAA,QAAQ,EAAE,EADJ;AAENC,IAAAA,IAAI,EAAE,EAFA;AAGNC,IAAAA,IAAI,EAAE;AAHA,GADW;AAMlBC,EAAAA,KAAK,EAAG;AACNH,IAAAA,QAAQ,EAAE,EADJ;AAENC,IAAAA,IAAI,EAAE,EAFA;AAGNC,IAAAA,IAAI,EAAE;AAHA;AANU,CAArB,C,CAYE;;AAEF,MAAME,KAAK,GAAGR,aAAa,CAACE,YAAD,CAA3B;AACA,MAAM;AAAEO,EAAAA;AAAF,IAAeD,KAArB;;AAEA,MAAME,aAAa,GAAG,CAAE;AAAEC,EAAAA;AAAF,CAAF,KAAoB;AACxC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBZ,UAAU,CAAC,CAACW,KAAD,EAAQE,MAAR,KAAmB;AACtD,QAAIC,QAAJ;;AACA,YAAOD,MAAM,CAACE,IAAd;AACE;AACA,WAAK,cAAL;AACEJ,QAAAA,KAAK,CAACT,KAAN,CAAYE,IAAZ,GAAmBS,MAAM,CAACG,KAA1B;AACAF,QAAAA,QAAQ,GAAGH,KAAX;AACA,eAAOG,QAAP;;AACF,WAAK,kBAAL;AACIH,QAAAA,KAAK,CAACT,KAAN,CAAYC,QAAZ,GAAuBU,MAAM,CAACG,KAA9B;AACAF,QAAAA,QAAQ,GAAGH,KAAX;AACA,eAAOA,KAAP;;AACJ,WAAK,cAAL;AACIA,QAAAA,KAAK,CAACT,KAAN,CAAYG,IAAZ,GAAmBQ,MAAM,CAACG,KAA1B;AACAF,QAAAA,QAAQ,GAAGH,KAAX;AACA,eAAOA,KAAP;;AAEJ,WAAK,cAAL;AACEA,QAAAA,KAAK,CAACL,KAAN,CAAYF,IAAZ,GAAmBS,MAAM,CAACG,KAA1B;AACAF,QAAAA,QAAQ,GAAGH,KAAX;AACA,eAAOA,KAAP;;AACF,WAAK,kBAAL;AACEA,QAAAA,KAAK,CAACL,KAAN,CAAYH,QAAZ,GAAuBU,MAAM,CAACG,KAA9B;AACAF,QAAAA,QAAQ,GAAGH,KAAX;AACA,eAAOA,KAAP;;AACA,WAAK,cAAL;AACEA,QAAAA,KAAK,CAACL,KAAN,CAAYD,IAAZ,GAAmBQ,MAAM,CAACG,KAA1B;AACAF,QAAAA,QAAQ,GAAGH,KAAX;AACA,eAAOA,KAAP;;AACJ;AACE,cAAM,IAAIM,KAAJ,EAAN;AA5BJ;;AA6BC;AACF,GAhCmC,EAgCjChB,YAhCiC,CAApC;AAkCA,sBAAO,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAE;AAAEU,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuCF,QAAvC,CAAP;AACD,CApCD;;AAuCA,SAASH,KAAT,EAAgBE,aAAhB","sourcesContent":["// store.js\n// https://blog.logrocket.com/use-hooks-and-context-not-react-and-redux/\n\nimport React, {createContext, useReducer} from 'react';\n\n\n// initialState is the blue print of my 'State' Object\nconst initialState = {\n  beans : {\n    settings: [],\n    data: [],\n    pics: []\n  },\n   brews : {\n     settings: [],\n     data: [],\n     pics: []\n   }}\n\n  //pics contains the link to the stored pictures of brews and beans\n\nconst store = createContext(initialState);\nconst { Provider } = store;\n\nconst StateProvider = ( { children } ) => {\n  const [state, dispatch] = useReducer((state, action) => {\n    let newState\n    switch(action.type) {\n      /*case 'setBeansSettings' */\n      case 'setBeansData':\n        state.beans.data = action.value\n        newState = state\n        return newState\n      case 'setBeansSettings':\n          state.beans.settings = action.value\n          newState = state\n          return state\n      case 'setBeansPics':\n          state.beans.pics = action.value\n          newState = state\n          return state\n\n      case 'setBrewsData':\n        state.brews.data = action.value\n        newState = state\n        return state\n      case 'setBrewsSettings':\n        state.brews.settings = action.value\n        newState = state\n        return state\n        case 'setBrewsPics':\n          state.brews.pics = action.value\n          newState = state\n          return state\n      default:\n        throw new Error();\n    };\n  }, initialState);\n\n  return <Provider value={{ state, dispatch }}>{children}</Provider>;\n};\n\n\nexport { store, StateProvider }"]},"metadata":{},"sourceType":"module"}