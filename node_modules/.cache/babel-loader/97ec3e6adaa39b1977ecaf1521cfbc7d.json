{"ast":null,"code":"var _jsxFileName = \"/mnt/Data/Javascript_code/Ionic/coffe-db/src/pages/Show-beans2.js\";\nimport React, { useState } from 'react';\nimport { IonPage, IonCard, IonHeader, IonToolbar, IonBackButton, IonContent, IonTitle, IonButtons, IonTextarea, IonButton, IonCardContent, IonLabel, IonItem, IonInput, IonFab, IonFabButton, IonIcon, IonImg } from '@ionic/react';\nimport { add, save } from 'ionicons/icons'; //------\n\nimport { useCamera, availableFeatures } from '@ionic/react-hooks/camera';\nimport { CameraResultType } from '@capacitor/core';\nimport { dynamicData } from '../components/frontend/create-table';\nimport { beansDataFileName, beansSettingsFileName } from '../components/objects/filenames';\nimport { beansDefault } from '../components/objects/default-values';\nimport { readSettings, readData } from '../components/backend/data';\nexport const ShowBeans = () => {\n  const [data, setData] = useState([]); // const [tableData, setTableData] = useState([])\n  // !!! add check if file exists !!! \n  // let data = []\n\n  const readFileData = async () => {\n    setData((await readData(beansDataFileName)));\n    console.log('data:', data);\n  };\n\n  readFileData();\n  let fields = [];\n\n  const fileSettingsRead = async () => {\n    //let fields = []\n    let fileContent = await readSettings(beansSettingsFileName);\n    console.log('filecontent:', fileContent);\n\n    if (fileContent) {\n      //if filename doesn't exist readSettings will return false    \n      fields = JSON.parse(fileContent); // console.log('fields:', fields)\n    } else {\n      fields = beansDefault;\n    }\n  };\n\n  fileSettingsRead();\n  let dynData = /*#__PURE__*/React.createElement(IonItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 19\n    }\n  });\n  console.log('data:', data);\n  console.log('data !== []:', data !== []);\n\n  if (data.length > 0) {\n    dynData = dynamicData(data, fields, beansDataFileName);\n  }\n\n  return /*#__PURE__*/React.createElement(IonPage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IonContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IonItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, \"TEST\"), /*#__PURE__*/React.createElement(IonItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, dynData)));\n};","map":{"version":3,"sources":["/mnt/Data/Javascript_code/Ionic/coffe-db/src/pages/Show-beans2.js"],"names":["React","useState","IonPage","IonCard","IonHeader","IonToolbar","IonBackButton","IonContent","IonTitle","IonButtons","IonTextarea","IonButton","IonCardContent","IonLabel","IonItem","IonInput","IonFab","IonFabButton","IonIcon","IonImg","add","save","useCamera","availableFeatures","CameraResultType","dynamicData","beansDataFileName","beansSettingsFileName","beansDefault","readSettings","readData","ShowBeans","data","setData","readFileData","console","log","fields","fileSettingsRead","fileContent","JSON","parse","dynData","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,SAASC,OAAT,EAAkBC,OAAlB,EAA2BC,SAA3B,EAAsCC,UAAtC,EAAkDC,aAAlD,EAAiEC,UAAjE,EAA6EC,QAA7E,EAAuFC,UAAvF,EAAmGC,WAAnG,EACIC,SADJ,EACeC,cADf,EAC+BC,QAD/B,EACyCC,OADzC,EACkDC,QADlD,EAC4DC,MAD5D,EACoEC,YADpE,EACkFC,OADlF,EAC2FC,MAD3F,QACwG,cADxG;AAGA,SAASC,GAAT,EAAcC,IAAd,QAA0B,gBAA1B,C,CAEA;;AACA,SAASC,SAAT,EAAoBC,iBAApB,QAA6C,2BAA7C;AACA,SAASC,gBAAT,QAAiC,iBAAjC;AAEA,SAASC,WAAT,QAA4B,qCAA5B;AACA,SAASC,iBAAT,EAA4BC,qBAA5B,QAAyD,iCAAzD;AACA,SAASC,YAAT,QAA6B,sCAA7B;AACA,SAASC,YAAT,EAAuBC,QAAvB,QAAuC,4BAAvC;AAIA,OAAO,MAAMC,SAAS,GAAG,MAAM;AAE3B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBhC,QAAQ,CAAC,EAAD,CAAhC,CAF2B,CAG5B;AAEA;AAEA;;AACC,QAAMiC,YAAY,GAAG,YAAY;AAC7BD,IAAAA,OAAO,EAAE,MAAMH,QAAQ,CAACJ,iBAAD,CAAhB,EAAP;AACAS,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBJ,IAApB;AACH,GAHD;;AAIAE,EAAAA,YAAY;AAIZ,MAAIG,MAAM,GAAG,EAAb;;AACA,QAAMC,gBAAgB,GAAG,YAAY;AACjC;AACA,QAAIC,WAAW,GAAI,MAAMV,YAAY,CAACF,qBAAD,CAArC;AACAQ,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BG,WAA5B;;AACA,QAAIA,WAAJ,EAAiB;AAAI;AACjBF,MAAAA,MAAM,GAAGG,IAAI,CAACC,KAAL,CAAWF,WAAX,CAAT,CADa,CAEjB;AACC,KAHD,MAGO;AACHF,MAAAA,MAAM,GAAGT,YAAT;AACH;AACJ,GAVD;;AAWAU,EAAAA,gBAAgB;AAEhB,MAAII,OAAO,gBAAG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAd;AACAP,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBJ,IAArB;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA2BJ,IAAI,KAAK,EAApC;;AAEA,MAAIA,IAAI,CAACW,MAAL,GAAc,CAAlB,EAAoB;AAChBD,IAAAA,OAAO,GAAGjB,WAAW,CAACO,IAAD,EAAMK,MAAN,EAAaX,iBAAb,CAArB;AACH;;AAGD,sBACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAUgB,OAAV,CAFJ,CADA,CADJ;AASH,CAhDM","sourcesContent":["import React, { useState } from 'react'\n\nimport { IonPage, IonCard, IonHeader, IonToolbar, IonBackButton, IonContent, IonTitle, IonButtons, IonTextarea,\n    IonButton ,IonCardContent, IonLabel, IonItem, IonInput, IonFab, IonFabButton, IonIcon, IonImg} from '@ionic/react'\n\nimport { add, save } from 'ionicons/icons'\n\n//------\nimport { useCamera, availableFeatures } from '@ionic/react-hooks/camera';\nimport { CameraResultType } from '@capacitor/core'\n\nimport { dynamicData } from '../components/frontend/create-table'\nimport { beansDataFileName, beansSettingsFileName } from '../components/objects/filenames'\nimport { beansDefault } from '../components/objects/default-values'\nimport { readSettings, readData } from '../components/backend/data'\n\n\n\nexport const ShowBeans = () => {\n\n    const [data, setData] = useState([])\n   // const [tableData, setTableData] = useState([])\n\n   // !!! add check if file exists !!! \n\n   // let data = []\n    const readFileData = async () => {\n        setData( await readData(beansDataFileName))\n        console.log('data:',data)\n    }\n    readFileData()\n    \n\n\n    let fields = []\n    const fileSettingsRead = async () => {\n        //let fields = []\n        let fileContent =  await readSettings(beansSettingsFileName)\n        console.log('filecontent:', fileContent)\n        if (fileContent) {   //if filename doesn't exist readSettings will return false    \n            fields = JSON.parse(fileContent)\n        // console.log('fields:', fields)\n        } else {\n            fields = beansDefault\n        }\n    }   \n    fileSettingsRead()\n\n    let dynData = <IonItem></IonItem>\n    console.log('data:', data)\n    console.log('data !== []:',data !== [])\n\n    if (data.length > 0){\n        dynData = dynamicData(data,fields,beansDataFileName)\n    }\n\n\n    return (\n        <IonPage>\n        <IonContent>\n            <IonItem>TEST</IonItem>\n            <IonItem>{dynData}</IonItem>\n            \n        </IonContent>\n        </IonPage>\n    )\n}"]},"metadata":{},"sourceType":"module"}