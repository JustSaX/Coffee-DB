{"ast":null,"code":"var _jsxFileName = \"/mnt/Data/Javascript_code/Ionic/coffe-db/src/components/frontend/add-items.js\";\nimport React from 'react';\nimport { useState } from 'react';\nimport { IonPage, IonCard, IonHeader, IonToolbar, IonBackButton, IonContent, IonTitle, IonButtons, IonTextarea, IonCardContent, IonLabel, IonItem, IonInput, IonGrid, IonRow, IonCol, IonIcon, IonButton, IonImg } from '@ionic/react';\nimport { trash, save, pieChart } from 'ionicons/icons';\nimport { beansDataFileName } from '../objects/filenames';\nimport { storeData } from '../backend/data'; //import { takePicture, pic } from '../backend/camera'\n//import { takePhoto } from '../backend/camera2'\n\nimport { useCamera, availableFeatures } from '@ionic/react-hooks/camera';\nimport { CameraResultType } from '@capacitor/core';\nimport './add-items.css';\n\nconst saveIt = async (fileName, array) => {\n  // https://stackoverflow.com/questions/42974735/create-object-from-array\n  const objectToSave = array.reduce((o, arrayItem) => ({ ...o,\n    [arrayItem[0]]: arrayItem[3]\n  }), {});\n  await storeData(beansDataFileName, objectToSave);\n};\n\nexport const AddItems = array => {\n  const {\n    photo,\n    getPhoto\n  } = useCamera();\n\n  const handleTakePhoto = () => {\n    if (availableFeatures.getPhoto) {\n      getPhoto({\n        quality: 100,\n        allowEditing: true,\n        resultType: CameraResultType.DataUrl\n      });\n    }\n  }; //const [picStore, SetPicStore] = useState()\n  //console.log('picstore',picStore)\n\n\n  let newArray = array.map((arrayItem, index) => arrayItem.concat([index, ''])); // example of arrray ['Bean', true, 0, '']\n  // => Bean is the field title; true if it should be displayed; 0 is the index; '' will be filled with content eg. Malabar \n\n  const [inputValues, setInputValues] = useState(newArray); //debugger\n\n  const result = newArray.filter(arrayItem => arrayItem[1]).map(arrayItem => /*#__PURE__*/React.createElement(IonItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IonInput, {\n    placeholder: arrayItem[0],\n    name: arrayItem[0],\n    id: arrayItem[2],\n    value: arrayItem[3],\n    onIonChange: e => {\n      inputValues[e.target.id][3] = e.detail.value;\n      setInputValues(inputValues);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  })));\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(IonItem, {\n    style: {\n      color: 'black'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, photo && /*#__PURE__*/React.createElement(IonImg, {\n    src: photo.dataUrl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 20\n    }\n  })), result, /*#__PURE__*/React.createElement(IonGrid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(IonRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IonCol, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonButton, {\n    color: \"dark\",\n    routerLink: \"./Show-beans\",\n    onClick: () => {\n      saveIt(beansDataFileName, inputValues);\n      setInputValues(inputValues.map(arrayItem => arrayItem.splice(0, 3).concat([''])));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(IonIcon, {\n    icon: save,\n    slot: \"icon-only\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(IonCol, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonButton, {\n    color: \"dark\",\n    onClick: () => setInputValues(inputValues.map(arrayItem => arrayItem.splice(0, 3).concat(['']))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonIcon, {\n    icon: trash,\n    slot: \"icon-only\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(IonCol, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonButton, {\n    color: \"dark\",\n    onClick: () => handleTakePhoto(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, \"picture\")))));\n};","map":{"version":3,"sources":["/mnt/Data/Javascript_code/Ionic/coffe-db/src/components/frontend/add-items.js"],"names":["React","useState","IonPage","IonCard","IonHeader","IonToolbar","IonBackButton","IonContent","IonTitle","IonButtons","IonTextarea","IonCardContent","IonLabel","IonItem","IonInput","IonGrid","IonRow","IonCol","IonIcon","IonButton","IonImg","trash","save","pieChart","beansDataFileName","storeData","useCamera","availableFeatures","CameraResultType","saveIt","fileName","array","objectToSave","reduce","o","arrayItem","AddItems","photo","getPhoto","handleTakePhoto","quality","allowEditing","resultType","DataUrl","newArray","map","index","concat","inputValues","setInputValues","result","filter","e","target","id","detail","value","color","dataUrl","splice"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { useState } from 'react'\n\nimport { IonPage, IonCard, IonHeader, IonToolbar, IonBackButton, IonContent, IonTitle, IonButtons, IonTextarea,\n    IonCardContent, IonLabel, IonItem, IonInput, IonGrid, IonRow, IonCol, IonIcon, IonButton, IonImg} from '@ionic/react'\n\nimport { trash, save, pieChart } from 'ionicons/icons'\n\nimport { beansDataFileName } from '../objects/filenames'\nimport { storeData } from '../backend/data'\n\n//import { takePicture, pic } from '../backend/camera'\n//import { takePhoto } from '../backend/camera2'\n\nimport { useCamera, availableFeatures } from '@ionic/react-hooks/camera';\nimport { CameraResultType } from '@capacitor/core'\n\nimport './add-items.css'\n\nconst saveIt = async (fileName, array) => {\n\n    // https://stackoverflow.com/questions/42974735/create-object-from-array\n    const objectToSave = array.reduce(( o, arrayItem) => ({...o, [arrayItem[0]]:arrayItem[3] }) , {})\n    await storeData(beansDataFileName, objectToSave)\n}\n\nexport const AddItems = (array) => {\n\n    const { photo, getPhoto} = useCamera();\n    const handleTakePhoto = () => {\n        if(availableFeatures.getPhoto) {\n        getPhoto({\n            quality: 100,\n            allowEditing: true,\n            resultType: CameraResultType.DataUrl\n            })\n        }\n    }\n\n\n    //const [picStore, SetPicStore] = useState()\n    //console.log('picstore',picStore)\n    \n    let newArray = array.map((arrayItem, index) => arrayItem.concat([index, '']))\n    // example of arrray ['Bean', true, 0, '']\n    // => Bean is the field title; true if it should be displayed; 0 is the index; '' will be filled with content eg. Malabar \n\n    const [inputValues, setInputValues] = useState(newArray)\n    //debugger\n    const result = newArray.filter(arrayItem => arrayItem[1])\n                        .map((arrayItem) => \n        <IonItem>\n            <IonInput placeholder={arrayItem[0]}\n                name={arrayItem[0]}\n                id={arrayItem[2]}\n                value={arrayItem[3]}\n                onIonChange={ e => {inputValues[e.target.id][3]=e.detail.value; setInputValues(inputValues) }}\n\n                ></IonInput>\n        </IonItem>  \n        )\n    return(<>\n    <IonItem style={{color: 'black'}}>\n        { photo && <IonImg src={photo.dataUrl}/>}\n    </IonItem>\n    {result}\n    <IonGrid>\n        <IonRow>\n            <IonCol>\n                <IonButton color='dark'\n                        routerLink='./Show-beans'\n                        onClick={() => {saveIt(beansDataFileName, inputValues)\n                            setInputValues(inputValues.map(arrayItem => arrayItem.splice(0,3).concat([''])))}} >\n                    <IonIcon icon={save} slot='icon-only'/>\n                </IonButton>\n            </IonCol>\n            <IonCol>\n            <IonButton color='dark'\n                onClick={ () => setInputValues(inputValues.map(arrayItem => arrayItem.splice(0,3).concat([''])))}>\n                    <IonIcon icon={trash} slot='icon-only'/>\n                </IonButton>\n            </IonCol>\n            <IonCol>\n            <IonButton color='dark'\n                onClick={() => handleTakePhoto()}>\n                    picture \n              \n                </IonButton>\n            </IonCol>\n        </IonRow>\n    </IonGrid>\n\n    </>\n    )\n}\n\n"]},"metadata":{},"sourceType":"module"}