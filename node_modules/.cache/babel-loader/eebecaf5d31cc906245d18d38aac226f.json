{"ast":null,"code":"var _jsxFileName = \"/mnt/Data/Javascript_code/Ionic/coffe-db/src/pages/Show-beans3.js\";\nimport React, { useState, useEffect } from 'react';\nimport { IonPage, IonCard, IonCardHeader, IonCardTitle, IonCardSubtitle, IonHeader, IonToolbar, IonBackButton, IonContent, IonTitle, IonButtons, IonTextarea, IonGrid, IonRow, IonCol, IonButton, IonCardContent, IonLabel, IonItem, IonInput, IonFab, IonFabButton, IonIcon, IonImg, IonList, IonNote } from '@ionic/react';\nimport { add, save, newspaper } from 'ionicons/icons';\nimport '../../src/'; //------\n\nimport { useCamera, availableFeatures } from '@ionic/react-hooks/camera';\nimport { CameraResultType } from '@capacitor/core';\nimport { picData, createTable } from '../components/frontend/create-table';\nimport { beansDataFileName, beansSettingsFileName } from '../components/objects/filenames';\nimport { beansDefault } from '../components/objects/default-values';\nimport { readSettings, readData, readPicture } from '../components/backend/data';\nconst settingsFileName = beansSettingsFileName;\nconst settingsDefault = beansDefault;\nconst dataFileName = beansDataFileName;\nexport const ShowBeans = () => {\n  const [data, setData] = useState([]);\n  const [picArray, setPicArray] = useState([]);\n  const [settings, setSettings] = useState([]); //let settings = []\n\n  useEffect(() => {\n    const loadAllFileData = async () => {\n      //load Settings\n      let fileContent = await readSettings(settingsFileName);\n      console.log('filecontent:', fileContent);\n\n      if (fileContent) {\n        //if filename doesn't exist readSettings will return false    \n        //settings = JSON.parse(fileContent)\n        setSettings(JSON.parse(fileContent));\n      } else {//settings = settingsDefault\n      }\n\n      setSettings(settingsDefault); // load data\n\n      const rawData = await readData(dataFileName);\n      const tempData = await createTable(rawData);\n      console.log('tempdata type:', typeof tempData);\n      setData(tempData);\n      const folder = dataFileName.split('/')[0];\n      /*\n      for (let i=0; i<tempData.length; i++){\n          const temp = await readPicture(folder + '/' + tempData[i].id.toString() + '.jpeg')\n          console.log('temp',temp)\n          picArray.push(temp)\n      }\n      setPicArray(picArray) */\n\n      let tempArray = [];\n      let tempPics = {};\n\n      for (let i = 0; i < tempData.length; i++) {\n        const temp = await readPicture(folder + '/' + tempData[i].id.toString() + '.jpeg');\n        tempPics[tempData[i].id] = temp;\n        console.log('tempData von i', tempData[i]);\n        console.log('tempPics:', tempPics); //console.log('temp',temp)\n        //picArray.push(temp)\n      }\n\n      tempArray.push(tempPics);\n      console.log('tempArray:', tempArray);\n      setPicArray(tempArray); //const tempPics = await picData(tempData, dataFileName)\n      //setPicArray(tempPics)\n      //\n    };\n\n    loadAllFileData();\n  }, []);\n  console.log('settings:', settings); //const newArray = [...picArray]\n\n  let res2;\n\n  if (picArray.length > 0 && data.length > 0) {\n    console.log('im in res2');\n    res2 = data.reverse().map((row, index1) => /*#__PURE__*/React.createElement(IonCard, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(IonGrid, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(IonRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(IonCol, {\n      size: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(IonCol, {\n      size: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }\n    }, picArray[0][row.id] ? /*#__PURE__*/React.createElement(IonImg, {\n      src: picArray[0][row.id],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 25\n      }\n    }) : /*#__PURE__*/React.createElement(IonImg, {\n      src: picArray[0][row.id],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(IonImg, {\n      src: picArray[0][row.id] || '../../../assets/icon/coffee-beans-icon.png',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(IonCol, {\n      size: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 21\n      }\n    }))), settings.filter(setting => setting[1] === true).map((setting, index2) => /*#__PURE__*/React.createElement(React.Fragment, null, index2 === 0 ? /*#__PURE__*/React.createElement(IonCardHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(IonLabel, {\n      color: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 29\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 53\n      }\n    }, row[setting[0]]), \" \"), /*#__PURE__*/React.createElement(IonLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 29\n      }\n    }, setting[0])) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(IonCardContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(IonLabel, {\n      color: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 37\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 61\n      }\n    }, row[setting[0]]), \" \"), /*#__PURE__*/React.createElement(IonCardSubtitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 37\n      }\n    }, setting[0]))))), /*#__PURE__*/React.createElement(IonCardContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(IonLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 29\n      }\n    }, Object.keys(row)[1], \": \", row[Object.keys(row)[1]]))));\n  } //{row[settings.filter(setting => setting[1] === true)[0][0]]}\n\n  /*\n  if(picArray.length > 0 && data.length > 0){\n      res2 = data.map((pic, index) => \n      <>\n      <IonItem>{pic.id} </IonItem> \n      <IonItem><IonImg src={picArray[0][pic.id] || newspaper}/> </IonItem>\n      </>)\n  }*/\n  //\"http://192.168.1.38:8100/_capacitor_file_/storage/emulated/0/Android/data/io.ionic.starter/files/data//\n\n\n  return /*#__PURE__*/React.createElement(IonPage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IonHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonToolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(IonButtons, {\n    slot: \"start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(IonBackButton, {\n    defaultHref: \"home\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 28\n    }\n  })), /*#__PURE__*/React.createElement(IonTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 17\n    }\n  }, \"Bohnen anzeigen\"))), /*#__PURE__*/React.createElement(IonContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonFab, {\n    vertical: \"top\",\n    horizontal: \"center\",\n    slot: \"fixed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(IonFabButton, {\n    color: \"dark\",\n    routerLink: \"./Add-beans\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(IonIcon, {\n    icon: add,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(IonList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }\n  }, res2)));\n};","map":{"version":3,"sources":["/mnt/Data/Javascript_code/Ionic/coffe-db/src/pages/Show-beans3.js"],"names":["React","useState","useEffect","IonPage","IonCard","IonCardHeader","IonCardTitle","IonCardSubtitle","IonHeader","IonToolbar","IonBackButton","IonContent","IonTitle","IonButtons","IonTextarea","IonGrid","IonRow","IonCol","IonButton","IonCardContent","IonLabel","IonItem","IonInput","IonFab","IonFabButton","IonIcon","IonImg","IonList","IonNote","add","save","newspaper","useCamera","availableFeatures","CameraResultType","picData","createTable","beansDataFileName","beansSettingsFileName","beansDefault","readSettings","readData","readPicture","settingsFileName","settingsDefault","dataFileName","ShowBeans","data","setData","picArray","setPicArray","settings","setSettings","loadAllFileData","fileContent","console","log","JSON","parse","rawData","tempData","folder","split","tempArray","tempPics","i","length","temp","id","toString","push","res2","reverse","map","row","index1","filter","setting","index2","Object","keys"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,SAASC,OAAT,EAAkBC,OAAlB,EAA2BC,aAA3B,EAA0CC,YAA1C,EAAwDC,eAAxD,EAAyEC,SAAzE,EAAoFC,UAApF,EACIC,aADJ,EACmBC,UADnB,EAC+BC,QAD/B,EACyCC,UADzC,EACqDC,WADrD,EACkEC,OADlE,EAC2EC,MAD3E,EACmFC,MADnF,EAEIC,SAFJ,EAEeC,cAFf,EAE+BC,QAF/B,EAEyCC,OAFzC,EAEkDC,QAFlD,EAE4DC,MAF5D,EAEoEC,YAFpE,EAEkFC,OAFlF,EAE2FC,MAF3F,EAEmGC,OAFnG,EAE4GC,OAF5G,QAE0H,cAF1H;AAIA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,SAApB,QAAqC,gBAArC;AACA,OAAO,YAAP,C,CAEA;;AACA,SAASC,SAAT,EAAoBC,iBAApB,QAA6C,2BAA7C;AACA,SAASC,gBAAT,QAAiC,iBAAjC;AAEA,SAASC,OAAT,EAAkBC,WAAlB,QAAqC,qCAArC;AACA,SAASC,iBAAT,EAA4BC,qBAA5B,QAAyD,iCAAzD;AACA,SAASC,YAAT,QAA6B,sCAA7B;AACA,SAASC,YAAT,EAAuBC,QAAvB,EAAiCC,WAAjC,QAAoD,4BAApD;AAGA,MAAMC,gBAAgB,GAAGL,qBAAzB;AACA,MAAMM,eAAe,GAAGL,YAAxB;AACA,MAAMM,YAAY,GAAGR,iBAArB;AAGA,OAAO,MAAMS,SAAS,GAAG,MAAM;AAE3B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkB/C,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACgD,QAAD,EAAWC,WAAX,IAA0BjD,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACkD,QAAD,EAAWC,WAAX,IAA0BnD,QAAQ,CAAC,EAAD,CAAxC,CAJ2B,CAO3B;;AACAC,EAAAA,SAAS,CAAC,MAAI;AACV,UAAMmD,eAAe,GAAG,YAAY;AAChC;AACA,UAAIC,WAAW,GAAI,MAAMd,YAAY,CAACG,gBAAD,CAArC;AACAY,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BF,WAA5B;;AACA,UAAIA,WAAJ,EAAiB;AAAI;AACjB;AACAF,QAAAA,WAAW,CAACK,IAAI,CAACC,KAAL,CAAWJ,WAAX,CAAD,CAAX;AACH,OAHD,MAGO,CACH;AACH;;AAAGF,MAAAA,WAAW,CAACR,eAAD,CAAX,CAT4B,CAUhC;;AACA,YAAMe,OAAO,GAAG,MAAMlB,QAAQ,CAACI,YAAD,CAA9B;AACA,YAAMe,QAAQ,GAAG,MAAMxB,WAAW,CAACuB,OAAD,CAAlC;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8B,OAAOI,QAArC;AACAZ,MAAAA,OAAO,CAACY,QAAD,CAAP;AAEA,YAAMC,MAAM,GAAGhB,YAAY,CAACiB,KAAb,CAAmB,GAAnB,EAAwB,CAAxB,CAAf;AACA;;;;;;;;AAOA,UAAIC,SAAS,GAAG,EAAhB;AACA,UAAIC,QAAQ,GAAG,EAAf;;AACA,WAAK,IAAIC,CAAC,GAAC,CAAX,EAAcA,CAAC,GAACL,QAAQ,CAACM,MAAzB,EAAiCD,CAAC,EAAlC,EAAqC;AACjC,cAAME,IAAI,GAAG,MAAMzB,WAAW,CAACmB,MAAM,GAAG,GAAT,GAAeD,QAAQ,CAACK,CAAD,CAAR,CAAYG,EAAZ,CAAeC,QAAf,EAAf,GAA2C,OAA5C,CAA9B;AACAL,QAAAA,QAAQ,CAACJ,QAAQ,CAACK,CAAD,CAAR,CAAYG,EAAb,CAAR,GAAyBD,IAAzB;AACAZ,QAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA6BI,QAAQ,CAACK,CAAD,CAArC;AACAV,QAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBQ,QAAzB,EAJiC,CAKjC;AACA;AACH;;AACDD,MAAAA,SAAS,CAACO,IAAV,CAAeN,QAAf;AACAT,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BO,SAA1B;AACAb,MAAAA,WAAW,CAACa,SAAD,CAAX,CApCgC,CAyChC;AACA;AAEA;AAEH,KA9CD;;AA+CAV,IAAAA,eAAe;AAClB,GAjDQ,EAiDN,EAjDM,CAAT;AAqDJE,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBL,QAAzB,EA7D+B,CA8D/B;;AACA,MAAIoB,IAAJ;;AACA,MAAGtB,QAAQ,CAACiB,MAAT,GAAkB,CAAlB,IAAuBnB,IAAI,CAACmB,MAAL,GAAc,CAAxC,EAA0C;AACtCX,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACAe,IAAAA,IAAI,GAAGxB,IAAI,CAACyB,OAAL,GAAeC,GAAf,CAAmB,CAACC,GAAD,EAAMC,MAAN,kBAEtB,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAII,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK1B,QAAQ,CAAC,CAAD,CAAR,CAAYyB,GAAG,CAACN,EAAhB,iBACD,oBAAC,MAAD;AAAQ,MAAA,GAAG,EAAEnB,QAAQ,CAAC,CAAD,CAAR,CAAYyB,GAAG,CAACN,EAAhB,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADC,gBAGD,oBAAC,MAAD;AAAQ,MAAA,GAAG,EAAEnB,QAAQ,CAAC,CAAD,CAAR,CAAYyB,GAAG,CAACN,EAAhB,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,eAMI,oBAAC,MAAD;AAAQ,MAAA,GAAG,EAAEnB,QAAQ,CAAC,CAAD,CAAR,CAAYyB,GAAG,CAACN,EAAhB,KAAuB,4CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,CAJJ,eAYI,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZJ,CADJ,CADJ,EAqBiBjB,QAAQ,CAACyB,MAAT,CAAgBC,OAAO,IAAIA,OAAO,CAAC,CAAD,CAAP,KAAe,IAA1C,EAAgDJ,GAAhD,CAAoD,CAACI,OAAD,EAAUC,MAAV,kBACrD,0CAEGA,MAAM,KAAK,CAAZ,gBACF,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKJ,GAAG,CAACG,OAAO,CAAC,CAAD,CAAR,CAAR,CAAxB,MADJ,eAEI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAWA,OAAO,CAAC,CAAD,CAAlB,CAFJ,CADE,gBAMA,uDACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEQ,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKH,GAAG,CAACG,OAAO,CAAC,CAAD,CAAR,CAAR,CAAxB,MAFR,eAGQ,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkBA,OAAO,CAAC,CAAD,CAAzB,CAHR,CADF,CARF,CADC,CArBjB,eA2CgB,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAWE,MAAM,CAACC,IAAP,CAAYN,GAAZ,EAAiB,CAAjB,CAAX,QAAkCA,GAAG,CAACK,MAAM,CAACC,IAAP,CAAYN,GAAZ,EAAiB,CAAjB,CAAD,CAArC,CADJ,CA3ChB,CAFG,CAAP;AAoDH,GAtH8B,CAwH/B;;AAEA;;;;;;;;AAWQ;;;AAEJ,sBACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACQ,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACG,oBAAC,aAAD;AAAe,IAAA,WAAW,EAAC,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,CADR,eAIA,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAJA,CADJ,CADJ,eASI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAQ,IAAA,QAAQ,EAAC,KAAjB;AAAuB,IAAA,UAAU,EAAC,QAAlC;AAA2C,IAAA,IAAI,EAAC,OAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAC,MAApB;AAA2B,IAAA,UAAU,EAAC,aAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,OAAD;AAAS,IAAA,IAAI,EAAE7C,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CADJ,eAMA,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK0C,IADL,CANA,CATJ,CADJ;AAsBH,CA7JM","sourcesContent":["import React, { useState, useEffect } from 'react'\n\nimport { IonPage, IonCard, IonCardHeader, IonCardTitle, IonCardSubtitle, IonHeader, IonToolbar, \n    IonBackButton, IonContent, IonTitle, IonButtons, IonTextarea, IonGrid, IonRow, IonCol,\n    IonButton ,IonCardContent, IonLabel, IonItem, IonInput, IonFab, IonFabButton, IonIcon, IonImg, IonList, IonNote} from '@ionic/react'\n\nimport { add, save, newspaper } from 'ionicons/icons'\nimport '../../src/'\n\n//------\nimport { useCamera, availableFeatures } from '@ionic/react-hooks/camera';\nimport { CameraResultType } from '@capacitor/core'\n\nimport { picData, createTable } from '../components/frontend/create-table'\nimport { beansDataFileName, beansSettingsFileName } from '../components/objects/filenames'\nimport { beansDefault } from '../components/objects/default-values'\nimport { readSettings, readData, readPicture } from '../components/backend/data'\n\n\nconst settingsFileName = beansSettingsFileName\nconst settingsDefault = beansDefault\nconst dataFileName = beansDataFileName\n\n\nexport const ShowBeans = () => {\n\n    const [data, setData] = useState([])\n    const [picArray, setPicArray] = useState([])\n    const [settings, setSettings] = useState([])\n \n\n    //let settings = []\n    useEffect(()=>{\n        const loadAllFileData = async () => {\n            //load Settings\n            let fileContent =  await readSettings(settingsFileName)\n            console.log('filecontent:', fileContent)\n            if (fileContent) {   //if filename doesn't exist readSettings will return false    \n                //settings = JSON.parse(fileContent)\n                setSettings(JSON.parse(fileContent))\n            } else {\n                //settings = settingsDefault\n            }   setSettings(settingsDefault)\n            // load data\n            const rawData = await readData(dataFileName)\n            const tempData = await createTable(rawData)\n            console.log('tempdata type:', typeof tempData)\n            setData(tempData)\n\n            const folder = dataFileName.split('/')[0]\n            /*\n            for (let i=0; i<tempData.length; i++){\n                const temp = await readPicture(folder + '/' + tempData[i].id.toString() + '.jpeg')\n                console.log('temp',temp)\n                picArray.push(temp)\n            }\n            setPicArray(picArray) */\n            let tempArray = []\n            let tempPics = {}\n            for (let i=0; i<tempData.length; i++){\n                const temp = await readPicture(folder + '/' + tempData[i].id.toString() + '.jpeg')\n                tempPics[tempData[i].id]=temp\n                console.log('tempData von i',tempData[i])\n                console.log('tempPics:', tempPics)\n                //console.log('temp',temp)\n                //picArray.push(temp)\n            }\n            tempArray.push(tempPics)\n            console.log('tempArray:', tempArray)\n            setPicArray(tempArray)\n\n\n\n\n            //const tempPics = await picData(tempData, dataFileName)\n            //setPicArray(tempPics)\n\n            //\n\n        }\n        loadAllFileData()\n    }, [])\n\n\n \nconsole.log('settings:', settings)\n//const newArray = [...picArray]\nlet res2\nif(picArray.length > 0 && data.length > 0){\n    console.log('im in res2')\n    res2 = data.reverse().map((row, index1) => \n\n        <IonCard>\n            <IonGrid>\n                <IonRow>\n                    <IonCol size='3' >\n                       \n                    </IonCol>\n                    <IonCol size='6'>\n                        {picArray[0][row.id] ?\n                        <IonImg src={picArray[0][row.id]}/>\n                        :\n                        <IonImg src={picArray[0][row.id]}/>\n                        }\n                        <IonImg src={picArray[0][row.id] || '../../../assets/icon/coffee-beans-icon.png'}/>\n                    </IonCol>\n                    <IonCol size='3'>\n                       \n                    </IonCol>\n                </IonRow>\n            </IonGrid>\n\n                 \n                        {settings.filter(setting => setting[1] === true).map((setting, index2) =>\n                        <> \n            \n                        { (index2 === 0) ?\n                        <IonCardHeader> \n                            <IonLabel color='dark'> <h1>{row[setting[0]]}</h1> </IonLabel>\n                            <IonLabel>{setting[0]}</IonLabel>\n                        </IonCardHeader>\n\n                        : <>\n                            <IonCardContent>\n                                {/*<IonItem class=\"ion-no-padding\">*/}\n                                    <IonLabel color='dark'> <h2>{row[setting[0]]}</h2> </IonLabel>\n                                    <IonCardSubtitle>{setting[0]}</IonCardSubtitle>\n                                {/*</IonItem>*/}\n                            </IonCardContent>\n                        </>}               \n                        \n\n                        </>)}\n                    \n\n                        <IonCardContent>   \n                            <IonLabel>{Object.keys(row)[1]}: {row[Object.keys(row)[1]]}</IonLabel>\n                        </IonCardContent>\n\n        </IonCard>\n\n    )\n}\n\n//{row[settings.filter(setting => setting[1] === true)[0][0]]}\n\n/*\nif(picArray.length > 0 && data.length > 0){\n    res2 = data.map((pic, index) => \n    <>\n    <IonItem>{pic.id} </IonItem> \n    <IonItem><IonImg src={picArray[0][pic.id] || newspaper}/> </IonItem>\n    </>)\n}*/\n\n\n\n        //\"http://192.168.1.38:8100/_capacitor_file_/storage/emulated/0/Android/data/io.ionic.starter/files/data//\n\n    return (\n        <IonPage>\n            <IonHeader>\n                <IonToolbar>\n                        <IonButtons slot='start'>\n                           <IonBackButton defaultHref='home'/>\n                        </IonButtons>\n                <IonTitle>Bohnen anzeigen</IonTitle>\n                </IonToolbar>\n                </IonHeader>\n            <IonContent>\n                <IonFab vertical='top' horizontal='center' slot='fixed'>\n                    <IonFabButton color='dark' routerLink='./Add-beans'>\n                        <IonIcon icon={add} />\n                    </IonFabButton>\n                </IonFab>\n            <IonList>\n                {res2}\n            </IonList>\n            </IonContent>\n        </IonPage>\n    )\n}"]},"metadata":{},"sourceType":"module"}