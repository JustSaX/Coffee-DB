{"ast":null,"code":"var _jsxFileName = \"/mnt/Data/Javascript_code/Ionic/coffe-db/src/components/frontend/sort-items.js\";\nimport React from 'react';\nimport { IonItem, IonReorder, IonReorderGroup, IonItemDivider, IonCheckbox, IonGrid, IonRow, IonCol, IonLabel, IonContent, IonButton, IonIcon, IonButtons, IonInput, IonTextarea } from '@ionic/react';\nimport { trash, save, close, addCircle } from 'ionicons/icons';\nimport { useState, useEffect } from 'react';\nconst fields = [['Bohne', true], ['RÃ¶ster', true], ['Kommentar', false]];\nconsole.log(fields);\nlet listOfItems = [0, 1, 2];\nexport const SortItems = () => {\n  const [items, setItems] = useState(fields); // const [tempItems, setTempItems] = useState(['banane'])\n\n  const [tempItem, setTempItem] = useState('');\n\n  const addItem = (newItem, arrayOfItems) => {\n    //const tempVar = items\n    arrayOfItems.push([newItem, true]);\n    setItems(arrayOfItems);\n    setTempItem('');\n    console.log(items);\n  };\n  /*\n  const reorder = (oldIndex, newIndex, arrayToOrder) => {\n      \n      //let newItems = [...arrayToOrder]\n      let newItems = Array.from(arrayToOrder)  //copies the array all levels deep (not shallow)\n      console.log(items)\n      console.log('arrayToOrder')\n     // console.log(arrayToOrder)\n      console.log('new Items')\n      console.log(newItems)\n      \n  \n     // debugger\n      if(oldIndex < newIndex){\n          newItems.splice(newIndex+1, 0, newItems[oldIndex])\n              console.log('splice start')\n              console.log(newItems)\n          newItems.splice(oldIndex, 1)\n              console.log(newItems)\n              console.log('splice finished')\n      } else if (oldIndex > newIndex) {\n          newItems.splice(newIndex, 0, newItems[oldIndex])\n              console.log('splice start')\n              console.log(newItems)\n          newItems.splice(oldIndex + 1, 1)\n              console.log(newItems)\n              console.log('splice finished')\n      } \n  \n      setTempItems(newItems)\n      console.log('TemPITEMS')\n      console.log(tempItems)\n      //debugger   \n      console.log(newItems)\n  } */\n  // copied from the documentation:\n\n\n  function doReorder(itemsSort, event) {\n    // The `from` and `to` properties contain the index of the item\n    // when the drag started and ended, respectively\n    console.log('Dragged from index', event.detail.from, 'to', event.detail.to); // Finish the reorder and position the item in the DOM based on\n    // where the gesture ended. This method can also be called directly\n    // by the reorder group\n    //event.detail.complete();\n    //event.detail.complete(true);\n\n    const newIndex = event.detail.to;\n    const oldIndex = event.detail.from; //let newItems = [...itemsSort]\n\n    console.log('before:', itemsSort);\n    itemsSort = event.detail.complete(itemsSort);\n    console.log('after:', itemsSort);\n    setItems(itemsSort); //reorder(oldIndex, newIndex, itemsSort)\n  }\n\n  const delItem = (index, arrayToDeleteFrom) => {\n    arrayToDeleteFrom.splice(index, 1);\n    setItems(arrayToDeleteFrom);\n    setTempItem(tempItem); //does nothing except making the dom rerender\n  };\n\n  const displayItems = itemsToDisplay => {\n    //fields needs to be read from file and handed over to function\n    const result = itemsToDisplay.map((arrayItem, index) => /*#__PURE__*/React.createElement(IonItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(IonCheckbox, {\n      slot: \"start\",\n      color: \"light\",\n      checked: arrayItem[1],\n      name: index,\n      onIonChange: e => console.log(e.target.name),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(IonLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }\n    }, arrayItem[0]), /*#__PURE__*/React.createElement(IonButton, {\n      color: \"light\",\n      name: index,\n      onClick: e => delItem(e.target.name, items),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }\n    }, \" \", /*#__PURE__*/React.createElement(IonIcon, {\n      icon: trash,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 27\n      }\n    })), /*#__PURE__*/React.createElement(IonReorder, {\n      slot: \"end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }\n    })));\n    return result;\n  };\n\n  return /*#__PURE__*/React.createElement(IonContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IonItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonLabel, {\n    slot: \"start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 17\n    }\n  }, \"Anzeigen\"), /*#__PURE__*/React.createElement(IonLabel, {\n    slot: \"end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 17\n    }\n  }, \"Reihenfolge\")), /*#__PURE__*/React.createElement(IonReorderGroup, {\n    disabled: false,\n    onIonItemReorder: e => doReorder(items, e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }\n  }, displayItems(items)), /*#__PURE__*/React.createElement(IonItem, {\n    class: \"ion-padding\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IonInput, {\n    background: \"light\",\n    placeholder: \"Feld hinzuf\\xFCgen\",\n    onIonChange: e => setTempItem(e.detail.value),\n    value: tempItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(IonButton, {\n    color: \"light\",\n    onClick: () => addItem(tempItem, items),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonIcon, {\n    slot: \"icon-only\",\n    icon: addCircle,\n    size: \"default\",\n    color: \"dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(IonGrid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 22\n    }\n  }, /*#__PURE__*/React.createElement(IonCol, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 30\n    }\n  }, /*#__PURE__*/React.createElement(IonButton, {\n    color: \"light\",\n    class: \"ion-text-capitalize\",\n    shape: \"round\",\n    size: \"default\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonIcon, {\n    icon: save,\n    slot: \"start\",\n    size: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 22\n    }\n  }), \"Speichern\")), /*#__PURE__*/React.createElement(IonCol, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonButton, {\n    color: \"light\",\n    class: \"ion-text-capitalize\",\n    shape: \"round\",\n    size: \"default\",\n    routerLink: \"./Home\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonIcon, {\n    icon: close,\n    slot: \"start\",\n    size: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 22\n    }\n  }), \"Abbrechen\")))), /*#__PURE__*/React.createElement(IonItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 5\n    }\n  }, items));\n};","map":{"version":3,"sources":["/mnt/Data/Javascript_code/Ionic/coffe-db/src/components/frontend/sort-items.js"],"names":["React","IonItem","IonReorder","IonReorderGroup","IonItemDivider","IonCheckbox","IonGrid","IonRow","IonCol","IonLabel","IonContent","IonButton","IonIcon","IonButtons","IonInput","IonTextarea","trash","save","close","addCircle","useState","useEffect","fields","console","log","listOfItems","SortItems","items","setItems","tempItem","setTempItem","addItem","newItem","arrayOfItems","push","doReorder","itemsSort","event","detail","from","to","newIndex","oldIndex","complete","delItem","index","arrayToDeleteFrom","splice","displayItems","itemsToDisplay","result","map","arrayItem","e","target","name","value"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { IonItem, IonReorder, IonReorderGroup, IonItemDivider, IonCheckbox, IonGrid, IonRow, IonCol,\n    IonLabel, IonContent, IonButton, IonIcon, IonButtons, IonInput, IonTextarea } from '@ionic/react'\n\nimport { trash, save, close, addCircle } from 'ionicons/icons'\n\nimport { useState, useEffect } from 'react'\n\nconst fields = [\n    ['Bohne', true],\n    ['RÃ¶ster', true],\n    ['Kommentar', false]\n]\n\nconsole.log(fields)\n\nlet listOfItems = [0, 1, 2]\n\n\n\n\n\n\n\n\n\n\n\n\n\nexport const SortItems = () => {\n    const [items, setItems] = useState(fields)\n   // const [tempItems, setTempItems] = useState(['banane'])\n    const [tempItem, setTempItem] = useState('')\n\nconst addItem = (newItem,arrayOfItems) => {\n    //const tempVar = items\n    arrayOfItems.push([newItem, true])\n    setItems(arrayOfItems)\n    setTempItem('')\n    console.log(items)\n\n}\n\n/*\nconst reorder = (oldIndex, newIndex, arrayToOrder) => {\n    \n    //let newItems = [...arrayToOrder]\n    let newItems = Array.from(arrayToOrder)  //copies the array all levels deep (not shallow)\n    console.log(items)\n    console.log('arrayToOrder')\n   // console.log(arrayToOrder)\n    console.log('new Items')\n    console.log(newItems)\n    \n\n   // debugger\n    if(oldIndex < newIndex){\n        newItems.splice(newIndex+1, 0, newItems[oldIndex])\n            console.log('splice start')\n            console.log(newItems)\n        newItems.splice(oldIndex, 1)\n            console.log(newItems)\n            console.log('splice finished')\n    } else if (oldIndex > newIndex) {\n        newItems.splice(newIndex, 0, newItems[oldIndex])\n            console.log('splice start')\n            console.log(newItems)\n        newItems.splice(oldIndex + 1, 1)\n            console.log(newItems)\n            console.log('splice finished')\n    } \n\n    setTempItems(newItems)\n    console.log('TemPITEMS')\n    console.log(tempItems)\n    //debugger   \n    console.log(newItems)\n} */\n\n// copied from the documentation:\nfunction doReorder(itemsSort, event) {\n\n    // The `from` and `to` properties contain the index of the item\n    // when the drag started and ended, respectively\n    console.log('Dragged from index', event.detail.from, 'to', event.detail.to);\n    // Finish the reorder and position the item in the DOM based on\n    // where the gesture ended. This method can also be called directly\n    // by the reorder group\n    //event.detail.complete();\n    //event.detail.complete(true);\n    const newIndex = event.detail.to\n    const oldIndex = event.detail.from\n    //let newItems = [...itemsSort]\n    \n    console.log('before:', itemsSort)\n\n    itemsSort = event.detail.complete(itemsSort);\n\n    console.log('after:', itemsSort)\n    setItems(itemsSort)\n    //reorder(oldIndex, newIndex, itemsSort)\n}\n    const delItem = (index, arrayToDeleteFrom) => {\n        arrayToDeleteFrom.splice(index, 1)\n        setItems(arrayToDeleteFrom)\n        setTempItem(tempItem)  //does nothing except making the dom rerender\n}\n\nconst displayItems = (itemsToDisplay) => {\n\n    //fields needs to be read from file and handed over to function\n    const result = itemsToDisplay.map((arrayItem, index) => \n        <IonItem>\n            <IonCheckbox slot='start' color='light' checked={arrayItem[1]}\n                    name={index}\n                    onIonChange={ e => console.log(e.target.name) }/>\n            <IonLabel>{arrayItem[0]}</IonLabel>\n            <IonButton color='light'\n                        name={index}\n                        onClick={ e => delItem(e.target.name,items)}\n                        > <IonIcon icon={trash}/></IonButton>\n            <IonReorder slot='end'/>\n        </IonItem>\n        )\n    return result\n}\n\n\n    return (\n        <IonContent>\n            <IonItem>\n                <IonLabel slot='start'>Anzeigen</IonLabel>\n                <IonLabel slot='end'>Reihenfolge</IonLabel>\n            </IonItem>\n            \n            <IonReorderGroup disabled={false}  onIonItemReorder={ (e) => doReorder(items, e)}>\n                {displayItems(items)}\n            </IonReorderGroup>\n        \n        <IonItem class='ion-padding'>\n            <IonInput background='light'\n                    placeholder='Feld hinzufÃ¼gen'\n                    onIonChange={e => setTempItem(e.detail.value)} value={tempItem}></IonInput>\n            <IonButton color='light'  \n                    onClick={() => addItem(tempItem,items)}>\n                    <IonIcon slot='icon-only' icon={addCircle} size='default' color='dark'/>\n                    </IonButton>\n        </IonItem>\n\n            <IonGrid><IonRow><IonCol>\n            <IonButton color='light'\n                    class=\"ion-text-capitalize\"\n                    shape='round'\n                    size='default'\n                    ><IonIcon icon={save} slot='start'size='large'/>Speichern</IonButton>\n            </IonCol>\n            <IonCol>          \n            <IonButton color='light'\n                    class=\"ion-text-capitalize\"\n                    shape='round'\n                    size='default'\n                    routerLink='./Home'\n                    ><IonIcon icon={close} slot='start' size='large'/>Abbrechen</IonButton>\n            </IonCol></IonRow></IonGrid>\n    <IonItem>{items}</IonItem>\n        </IonContent>\n          \n\n    )\n}"]},"metadata":{},"sourceType":"module"}