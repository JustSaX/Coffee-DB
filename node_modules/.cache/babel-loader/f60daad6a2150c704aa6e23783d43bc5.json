{"ast":null,"code":"var _jsxFileName = \"/mnt/Data/Javascript_code/Ionic/coffe-db/src/pages/Show-beans.js\";\nimport React, { useState } from 'react';\nimport { IonPage, IonCard, IonHeader, IonToolbar, IonBackButton, IonContent, IonTitle, IonButtons, IonTextarea, IonButton, IonCardContent, IonLabel, IonItem, IonInput, IonFab, IonFabButton, IonIcon, IonImg } from '@ionic/react';\nimport { add, save } from 'ionicons/icons'; //------\n\nimport { useCamera, availableFeatures } from '@ionic/react-hooks/camera';\nimport { CameraResultType } from '@capacitor/core';\nimport { dynamicData } from '../components/frontend/create-table';\nimport { beansDataFileName, beansSettingsFileName } from '../components/objects/filenames';\nimport { beansDefault } from '../components/objects/default-values';\nimport { readSettings, readData, createTable } from '../components/backend/data';\nexport const ShowBeans = () => {\n  //------------------\n  const {\n    photo,\n    getPhoto\n  } = useCamera();\n\n  const handleTakePhoto = () => {\n    if (availableFeatures.getPhoto) {\n      getPhoto({\n        quality: 100,\n        allowEditing: false,\n        resultType: CameraResultType.DataUrl\n      });\n    }\n  }; // -------------------\n  //const [data, setData] = useState()\n\n\n  const fileName = beansSettingsFileName;\n  let fields = [];\n\n  const fileSettingsRead = async () => {\n    //let fields = []\n    let fileContent = await readSettings(fileName);\n    console.log('filecontent:', fileContent);\n\n    if (fileContent) {\n      //if filename doesn't exist readSettings will return false    \n      fields = JSON.parse(fileContent); // console.log('fields:', fields)\n    } else {\n      fields = beansDefault;\n    }\n  };\n\n  fileSettingsRead();\n  /*\n  let savedData = []\n  let header = []\n  let fileExists = false\n  const readSavedData = async () => {\n      let fileContent = await readData(beansDataFileName)\n      console.log('fileContent isch:', fileContent)\n      if (fileContent){\n          [header, savedData] = createTable(fileContent)\n          console.log('savedData:', savedData)\n          fileExists = true\n          console.log('file isch do:', fileExists)\n      } else {\n          //fileExists = false\n      }\n  }\n  */\n\n  const readSavedData = () => {\n    let savedData = [];\n    let header = [];\n    let fileExists = false;\n\n    const read = async () => {\n      let fileContent = await readData(beansDataFileName);\n      console.log('fileContent isch:', fileContent);\n\n      if (fileContent) {\n        [header, savedData] = createTable(fileContent);\n        console.log('savedData:', savedData);\n        fileExists = true;\n        console.log('file isch do:', fileExists);\n      } //fileExists = false\n\n    };\n\n    return savedData;\n  };\n\n  const data = readSavedData();\n  return /*#__PURE__*/React.createElement(IonPage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IonHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonToolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(IonButtons, {\n    slot: \"start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(IonBackButton, {\n    defaultHref: \"home\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 28\n    }\n  })), /*#__PURE__*/React.createElement(IonTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  }, \"Bohnen anzeigen\"))), /*#__PURE__*/React.createElement(IonContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonFab, {\n    vertical: \"top\",\n    horizontal: \"center\",\n    slot: \"fixed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(IonFabButton, {\n    color: \"dark\",\n    routerLink: \"./Add-beans\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(IonIcon, {\n    icon: add,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(IonButton, {\n    onClick: () => handleTakePhoto(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }, \"Click\"), /*#__PURE__*/React.createElement(IonItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, \" au Test\", data && dynamicData(data, fields, beansDataFileName))));\n};","map":{"version":3,"sources":["/mnt/Data/Javascript_code/Ionic/coffe-db/src/pages/Show-beans.js"],"names":["React","useState","IonPage","IonCard","IonHeader","IonToolbar","IonBackButton","IonContent","IonTitle","IonButtons","IonTextarea","IonButton","IonCardContent","IonLabel","IonItem","IonInput","IonFab","IonFabButton","IonIcon","IonImg","add","save","useCamera","availableFeatures","CameraResultType","dynamicData","beansDataFileName","beansSettingsFileName","beansDefault","readSettings","readData","createTable","ShowBeans","photo","getPhoto","handleTakePhoto","quality","allowEditing","resultType","DataUrl","fileName","fields","fileSettingsRead","fileContent","console","log","JSON","parse","readSavedData","savedData","header","fileExists","read","data"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\n\nimport { IonPage, IonCard, IonHeader, IonToolbar, IonBackButton, IonContent, IonTitle, IonButtons, IonTextarea,\n    IonButton ,IonCardContent, IonLabel, IonItem, IonInput, IonFab, IonFabButton, IonIcon, IonImg} from '@ionic/react'\n\nimport { add, save } from 'ionicons/icons'\n\n//------\nimport { useCamera, availableFeatures } from '@ionic/react-hooks/camera';\nimport { CameraResultType } from '@capacitor/core'\n\nimport { dynamicData } from '../components/frontend/create-table'\nimport { beansDataFileName, beansSettingsFileName } from '../components/objects/filenames'\nimport { beansDefault } from '../components/objects/default-values'\nimport { readSettings, readData, createTable } from '../components/backend/data'\n\nexport const ShowBeans = () =>{\n    //------------------\n    const { photo, getPhoto} = useCamera();\n    const handleTakePhoto = () => {\n    if(availableFeatures.getPhoto) {\n      getPhoto({\n        quality: 100,\n        allowEditing: false,\n        resultType: CameraResultType.DataUrl\n      })\n    }\n}\n// -------------------\n\n//const [data, setData] = useState()\n\n\nconst fileName = beansSettingsFileName\n\nlet fields = []\nconst fileSettingsRead = async () => {\n    //let fields = []\n    let fileContent =  await readSettings(fileName)\n    console.log('filecontent:', fileContent)\n    if (fileContent) {   //if filename doesn't exist readSettings will return false    \n        fields = JSON.parse(fileContent)\n       // console.log('fields:', fields)\n    } else {\n        fields = beansDefault\n    }\n}   \nfileSettingsRead()\n\n/*\nlet savedData = []\nlet header = []\nlet fileExists = false\nconst readSavedData = async () => {\n    let fileContent = await readData(beansDataFileName)\n    console.log('fileContent isch:', fileContent)\n    if (fileContent){\n        [header, savedData] = createTable(fileContent)\n        console.log('savedData:', savedData)\n        fileExists = true\n        console.log('file isch do:', fileExists)\n    } else {\n        //fileExists = false\n    }\n}\n*/\n    const readSavedData = () => {\n        let savedData = []\n        let header = []\n        let fileExists = false\n        const read = async () =>{\n            let fileContent = await readData(beansDataFileName)\n            console.log('fileContent isch:', fileContent)\n            if (fileContent){\n                [header, savedData] = createTable(fileContent)\n                console.log('savedData:', savedData)\n                fileExists = true\n                console.log('file isch do:', fileExists)\n            }\n            //fileExists = false\n        }\n            return savedData\n    }\n\nconst data = readSavedData()\n\n\n\n    return(\n        <IonPage>\n            <IonHeader>\n                <IonToolbar>\n                        <IonButtons slot='start'>\n                           <IonBackButton defaultHref='home'/>\n                        </IonButtons>\n                <IonTitle>Bohnen anzeigen</IonTitle>\n                </IonToolbar>\n                </IonHeader>\n            <IonContent>\n                <IonFab vertical='top' horizontal='center' slot='fixed'>\n                    <IonFabButton color='dark' routerLink='./Add-beans'>\n                        <IonIcon icon={add} />\n                    </IonFabButton>\n                </IonFab>\n\n\n            <IonButton onClick={() => handleTakePhoto()}>Click</IonButton>\n            <IonItem> au Test\n\n                { data && dynamicData(data, fields, beansDataFileName)}\n\n\n            </IonItem> \n\n            </IonContent>\n        </IonPage>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}