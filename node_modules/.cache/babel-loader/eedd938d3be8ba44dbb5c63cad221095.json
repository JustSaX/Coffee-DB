{"ast":null,"code":"var _jsxFileName = \"/mnt/Data/Javascript_code/Ionic/coffe-db/src/pages/Show-beans3.js\";\nimport React, { useState, useEffect } from 'react';\nimport { IonPage, IonCard, IonHeader, IonToolbar, IonBackButton, IonContent, IonTitle, IonButtons, IonTextarea, IonButton, IonCardContent, IonLabel, IonItem, IonInput, IonFab, IonFabButton, IonIcon, IonImg } from '@ionic/react';\nimport { add, save } from 'ionicons/icons'; //------\n\nimport { useCamera, availableFeatures } from '@ionic/react-hooks/camera';\nimport { CameraResultType } from '@capacitor/core';\nimport { picData, createTable } from '../components/frontend/create-table';\nimport { beansDataFileName, beansSettingsFileName } from '../components/objects/filenames';\nimport { beansDefault } from '../components/objects/default-values';\nimport { readSettings, readData, readPicture } from '../components/backend/data';\nconst settingsFileName = beansSettingsFileName;\nconst settingsDefault = beansDefault;\nconst dataFileName = beansDataFileName;\nexport const ShowBeans = () => {\n  const [data, setData] = useState([]);\n  const [picArray, setPicArray] = useState([]);\n  let settings = [];\n  useEffect(() => {\n    const loadAllFileData = async () => {\n      //load Settings\n      let fileContent = await readSettings(settingsFileName);\n      console.log('filecontent:', fileContent);\n\n      if (fileContent) {\n        //if filename doesn't exist readSettings will return false    \n        settings = JSON.parse(fileContent);\n      } else {\n        settings = settingsDefault;\n      } // load data\n\n\n      const rawData = await readData(dataFileName);\n      const tempData = await createTable(rawData);\n      setData(rawData);\n      const folder = dataFileName.split('/')[0];\n\n      for (let i = 0; i < tempData.length; i++) {\n        const temp = await readPicture(folder + '/' + tempData[i].id.toString() + '.jpeg');\n        picArray.push(temp);\n      }\n\n      setPicArray(picArray); //const tempPics = await picData(tempData, dataFileName)\n      //setPicArray(tempPics)\n      //\n    };\n\n    loadAllFileData();\n  }, []);\n  console.log('data:', data);\n  console.log('picArray:', picArray);\n  console.log('picArray[0]:', picArray[0]);\n  let dynData = /*#__PURE__*/React.createElement(IonItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 19\n    }\n  }, \"no Data\");\n  console.log('picarray length:', picArray.length); //if (picArray.length > 0){\n\n  dynData = picArray.map(item => /*#__PURE__*/React.createElement(IonItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 36\n    }\n  }, item)); //}\n\n  return /*#__PURE__*/React.createElement(IonPage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IonContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IonItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, \"TEST\"), /*#__PURE__*/React.createElement(IonItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, dynData)));\n};","map":{"version":3,"sources":["/mnt/Data/Javascript_code/Ionic/coffe-db/src/pages/Show-beans3.js"],"names":["React","useState","useEffect","IonPage","IonCard","IonHeader","IonToolbar","IonBackButton","IonContent","IonTitle","IonButtons","IonTextarea","IonButton","IonCardContent","IonLabel","IonItem","IonInput","IonFab","IonFabButton","IonIcon","IonImg","add","save","useCamera","availableFeatures","CameraResultType","picData","createTable","beansDataFileName","beansSettingsFileName","beansDefault","readSettings","readData","readPicture","settingsFileName","settingsDefault","dataFileName","ShowBeans","data","setData","picArray","setPicArray","settings","loadAllFileData","fileContent","console","log","JSON","parse","rawData","tempData","folder","split","i","length","temp","id","toString","push","dynData","map","item"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\n\nimport { IonPage, IonCard, IonHeader, IonToolbar, IonBackButton, IonContent, IonTitle, IonButtons, IonTextarea,\n    IonButton ,IonCardContent, IonLabel, IonItem, IonInput, IonFab, IonFabButton, IonIcon, IonImg} from '@ionic/react'\n\nimport { add, save } from 'ionicons/icons'\n\n//------\nimport { useCamera, availableFeatures } from '@ionic/react-hooks/camera';\nimport { CameraResultType } from '@capacitor/core'\n\nimport { picData, createTable } from '../components/frontend/create-table'\nimport { beansDataFileName, beansSettingsFileName } from '../components/objects/filenames'\nimport { beansDefault } from '../components/objects/default-values'\nimport { readSettings, readData, readPicture } from '../components/backend/data'\n\n\nconst settingsFileName = beansSettingsFileName\nconst settingsDefault = beansDefault\nconst dataFileName = beansDataFileName\n\nexport const ShowBeans = () => {\n\n    const [data, setData] = useState([])\n    const [picArray, setPicArray] = useState([])\n \n\n    let settings = []\n    useEffect(()=>{\n        const loadAllFileData = async () => {\n            //load Settings\n            let fileContent =  await readSettings(settingsFileName)\n            console.log('filecontent:', fileContent)\n            if (fileContent) {   //if filename doesn't exist readSettings will return false    \n                settings = JSON.parse(fileContent)\n            } else {\n                settings = settingsDefault\n            }\n            // load data\n            const rawData = await readData(dataFileName)\n            const tempData = await createTable(rawData)\n            setData(rawData)\n\n            const folder = dataFileName.split('/')[0]\n            for (let i=0; i<tempData.length; i++){\n                const temp = await readPicture(folder + '/' + tempData[i].id.toString() + '.jpeg')\n                picArray.push(temp)\n            }\n            setPicArray(picArray)\n\n\n\n\n            //const tempPics = await picData(tempData, dataFileName)\n            //setPicArray(tempPics)\n\n            //\n\n        }\n        loadAllFileData()\n    }, [])\n\n    console.log('data:', data)\n    console.log('picArray:', picArray)\n    console.log('picArray[0]:', picArray[0])\n\n\n    let dynData = <IonItem>no Data</IonItem>\n\n    console.log('picarray length:',picArray.length)\n   //if (picArray.length > 0){\n    dynData = picArray.map(item => <IonItem>{item}</IonItem>)\n    //}\n    \n\n    return (\n        <IonPage>\n        <IonContent>\n            <IonItem>TEST</IonItem>\n            <IonItem>{dynData}</IonItem>\n           \n        </IonContent>\n        </IonPage>\n    )\n}"]},"metadata":{},"sourceType":"module"}