{"ast":null,"code":"var _jsxFileName = \"/mnt/Data/Javascript_code/Ionic/coffe-db/src/components/frontend/add-items.js\";\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { IonPage, IonCard, IonHeader, IonToolbar, IonBackButton, IonContent, IonTitle, IonButtons, IonTextarea, IonCardContent, IonLabel, IonItem, IonInput, IonGrid, IonRow, IonCol, IonIcon, IonButton, IonImg } from '@ionic/react';\nimport { trash, save, camera, cameraReverse } from 'ionicons/icons'; //import { beansDataFileName } from '../objects/filenames'\n\nimport { storeData, readSettings } from '../backend/data';\nimport { useCamera, availableFeatures } from '@ionic/react-hooks/camera';\nimport { CameraResultType } from '@capacitor/core'; //import './add-items.css'\n\nexport const AddItems = (defaultSetttings, settingsFileName, fileName) => {\n  const [settings, setSettings] = useState([]);\n  const [isFileRead, setIsFileRead] = useState([false]);\n  const [newArray, setNewArray] = useState([]);\n  const [inputValues, setInputValues] = useState([]);\n\n  const fileSettingsRead = async () => {\n    setIsFileRead(true);\n    let fields = [];\n    let fileContent = await readSettings(settingsFileName);\n    console.log('filecontent:', fileContent);\n\n    if (fileContent) {\n      //if filename doesn't exist readSettings will return false    \n      fields = JSON.parse(fileContent); // console.log('fields:', fields)\n    } else {\n      fields = defaultSetttings;\n    }\n\n    setSettings(fields);\n    setNewArray(settings.map((arrayItem, index) => arrayItem.concat([index, ''])));\n    setInputValues(JSON.parse(JSON.stringify(newArray)));\n  };\n\n  if (isFileRead === false) {\n    fileSettingsRead();\n  } //const [newArray, setNewArray] = useState(settings.map((arrayItem, index) => arrayItem.concat([index, ''])))\n  //let newArray = array.map((arrayItem, index) => arrayItem.concat([index, '']))\n  // example of arrray ['Bean', true, 0, '']\n  // => Bean is the field title; true if it should be displayed; 0 is the index; '' will be filled with content eg. Malabar \n\n\n  console.log(newArray);\n  let {\n    photo,\n    getPhoto\n  } = useCamera();\n  const [myPhoto, setMyPhoto] = useState(photo);\n\n  const handleTakePhoto = async () => {\n    if (availableFeatures.getPhoto) {\n      await getPhoto({\n        quality: 100,\n        allowEditing: false,\n        resultType: CameraResultType.DataUrl,\n        height: 1000\n      });\n    }\n  };\n\n  useEffect(() => setMyPhoto(photo), [photo]);\n\n  const delFunc = () => {\n    //console.log('newarray1:',newArray)\n    setInputValues(inputValues.map(arrayItem => arrayItem.splice(0, 3).concat([''])));\n    console.log('inputvalueSSS:', inputValues); //setNewArray()\n\n    setMyPhoto(undefined); //console.log('newarray2:',newArray)\n  };\n\n  const saveIt = async (fileName, array, photo) => {\n    // https://stackoverflow.com/questions/42974735/create-object-from-array\n    const objectToSave = array.reduce((o, arrayItem) => ({ ...o,\n      [arrayItem[0]]: arrayItem[3]\n    }), {});\n    await storeData(fileName, objectToSave, photo);\n    delFunc();\n  }; //debugger\n\n\n  console.log('newarray1:', newArray);\n  let result;\n\n  if (inputValues.length > 0) {\n    result = inputValues.filter(arrayItem => arrayItem[1]).map(arrayItem => /*#__PURE__*/React.createElement(IonItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(IonInput, {\n      placeholder: arrayItem[0],\n      name: arrayItem[0],\n      id: arrayItem[2],\n      value: arrayItem[3],\n      onIonChange: e => {\n        inputValues[e.target.id][3] = e.detail.value;\n        setInputValues(inputValues);\n        console.log(inputValues);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }\n    })));\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(IonGrid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(IonRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IonCol, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, myPhoto && /*#__PURE__*/React.createElement(IonImg, {\n    height: \"200px\",\n    src: myPhoto.dataUrl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 26\n    }\n  }))), /*#__PURE__*/React.createElement(IonRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IonCol, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonButton, {\n    color: \"dark\",\n    onClick: () => handleTakePhoto(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonIcon, {\n    slot: \"icon-only\",\n    src: myPhoto ? cameraReverse : camera,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }\n  }))))), result, /*#__PURE__*/React.createElement(IonGrid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(IonRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IonCol, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonButton, {\n    color: \"dark\",\n    routerLink: \"./Show-beans\",\n    onClick: () => saveIt(fileName, inputValues, myPhoto),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(IonIcon, {\n    icon: save,\n    slot: \"icon-only\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(IonCol, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonButton, {\n    color: \"dark\",\n    onClick: () => delFunc(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonIcon, {\n    icon: trash,\n    slot: \"icon-only\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 21\n    }\n  }))))));\n};","map":{"version":3,"sources":["/mnt/Data/Javascript_code/Ionic/coffe-db/src/components/frontend/add-items.js"],"names":["React","useState","useEffect","IonPage","IonCard","IonHeader","IonToolbar","IonBackButton","IonContent","IonTitle","IonButtons","IonTextarea","IonCardContent","IonLabel","IonItem","IonInput","IonGrid","IonRow","IonCol","IonIcon","IonButton","IonImg","trash","save","camera","cameraReverse","storeData","readSettings","useCamera","availableFeatures","CameraResultType","AddItems","defaultSetttings","settingsFileName","fileName","settings","setSettings","isFileRead","setIsFileRead","newArray","setNewArray","inputValues","setInputValues","fileSettingsRead","fields","fileContent","console","log","JSON","parse","map","arrayItem","index","concat","stringify","photo","getPhoto","myPhoto","setMyPhoto","handleTakePhoto","quality","allowEditing","resultType","DataUrl","height","delFunc","splice","undefined","saveIt","array","objectToSave","reduce","o","result","length","filter","e","target","id","detail","value","dataUrl"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,SAASC,OAAT,EAAkBC,OAAlB,EAA2BC,SAA3B,EAAsCC,UAAtC,EAAkDC,aAAlD,EAAiEC,UAAjE,EAA6EC,QAA7E,EAAuFC,UAAvF,EAAmGC,WAAnG,EACIC,cADJ,EACoBC,QADpB,EAC8BC,OAD9B,EACuCC,QADvC,EACiDC,OADjD,EAC0DC,MAD1D,EACkEC,MADlE,EAC0EC,OAD1E,EACmFC,SADnF,EAC8FC,MAD9F,QAC2G,cAD3G;AAGA,SAASC,KAAT,EAAgBC,IAAhB,EAAsBC,MAAtB,EAA8BC,aAA9B,QAAkD,gBAAlD,C,CAEA;;AACA,SAASC,SAAT,EAAoBC,YAApB,QAAwC,iBAAxC;AAEA,SAASC,SAAT,EAAoBC,iBAApB,QAA6C,2BAA7C;AACA,SAASC,gBAAT,QAAiC,iBAAjC,C,CAEA;;AAGA,OAAO,MAAMC,QAAQ,GAAG,CAACC,gBAAD,EAAmBC,gBAAnB,EAAqCC,QAArC,KAAkD;AAEtE,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BnC,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACoC,UAAD,EAAaC,aAAb,IAA8BrC,QAAQ,CAAC,CAAC,KAAD,CAAD,CAA5C;AACA,QAAM,CAACsC,QAAD,EAAWC,WAAX,IAA0BvC,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACwC,WAAD,EAAcC,cAAd,IAAgCzC,QAAQ,CAAC,EAAD,CAA9C;;AAEJ,QAAM0C,gBAAgB,GAAG,YAAY;AACjCL,IAAAA,aAAa,CAAC,IAAD,CAAb;AACA,QAAIM,MAAM,GAAG,EAAb;AACA,QAAIC,WAAW,GAAI,MAAMlB,YAAY,CAACM,gBAAD,CAArC;AACAa,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BF,WAA5B;;AACA,QAAIA,WAAJ,EAAiB;AAAI;AACjBD,MAAAA,MAAM,GAAGI,IAAI,CAACC,KAAL,CAAWJ,WAAX,CAAT,CADa,CAEd;AACF,KAHD,MAGO;AACHD,MAAAA,MAAM,GAAGZ,gBAAT;AACH;;AACDI,IAAAA,WAAW,CAACQ,MAAD,CAAX;AACAJ,IAAAA,WAAW,CAACL,QAAQ,CAACe,GAAT,CAAa,CAACC,SAAD,EAAYC,KAAZ,KAAsBD,SAAS,CAACE,MAAV,CAAiB,CAACD,KAAD,EAAQ,EAAR,CAAjB,CAAnC,CAAD,CAAX;AACAV,IAAAA,cAAc,CAACM,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACM,SAAL,CAAef,QAAf,CAAX,CAAD,CAAd;AACH,GAdD;;AAgBA,MAAGF,UAAU,KAAK,KAAlB,EAAyB;AAACM,IAAAA,gBAAgB;AAAG,GAvB6B,CA0BtE;AACA;AACA;AACA;;;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYR,QAAZ;AASA,MAAI;AAAEgB,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAsB5B,SAAS,EAAnC;AACA,QAAO,CAAE6B,OAAF,EAAWC,UAAX,IAA0BzD,QAAQ,CAACsD,KAAD,CAAzC;;AAEA,QAAMI,eAAe,GAAG,YAAY;AAChC,QAAG9B,iBAAiB,CAAC2B,QAArB,EAA+B;AAC9B,YAAMA,QAAQ,CAAC;AACZI,QAAAA,OAAO,EAAE,GADG;AAEZC,QAAAA,YAAY,EAAE,KAFF;AAGZC,QAAAA,UAAU,EAAEhC,gBAAgB,CAACiC,OAHjB;AAIZC,QAAAA,MAAM,EAAE;AAJI,OAAD,CAAd;AAMA;AACJ,GATD;;AAWA9D,EAAAA,SAAS,CAAC,MAAMwD,UAAU,CAACH,KAAD,CAAjB,EAA0B,CAACA,KAAD,CAA1B,CAAT;;AAEA,QAAMU,OAAO,GAAG,MAAM;AAClB;AACAvB,IAAAA,cAAc,CAACD,WAAW,CAACS,GAAZ,CAAgBC,SAAS,IAAIA,SAAS,CAACe,MAAV,CAAiB,CAAjB,EAAmB,CAAnB,EAAsBb,MAAtB,CAA6B,CAAC,EAAD,CAA7B,CAA7B,CAAD,CAAd;AACAP,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BN,WAA9B,EAHkB,CAIlB;;AACAiB,IAAAA,UAAU,CAACS,SAAD,CAAV,CALkB,CAMlB;AACH,GAPD;;AASA,QAAMC,MAAM,GAAG,OAAOlC,QAAP,EAAiBmC,KAAjB,EAAwBd,KAAxB,KAAkC;AAE7C;AACA,UAAMe,YAAY,GAAGD,KAAK,CAACE,MAAN,CAAa,CAAEC,CAAF,EAAKrB,SAAL,MAAoB,EAAC,GAAGqB,CAAJ;AAAO,OAACrB,SAAS,CAAC,CAAD,CAAV,GAAeA,SAAS,CAAC,CAAD;AAA/B,KAApB,CAAb,EAAyE,EAAzE,CAArB;AACA,UAAMzB,SAAS,CAACQ,QAAD,EAAWoC,YAAX,EAAyBf,KAAzB,CAAf;AACAU,IAAAA,OAAO;AACV,GAND,CAhEsE,CAwEtE;;;AACAnB,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAAyBR,QAAzB;AACA,MAAIkC,MAAJ;;AACA,MAAIhC,WAAW,CAACiC,MAAZ,GAAqB,CAAzB,EAA2B;AACvBD,IAAAA,MAAM,GAAGhC,WAAW,CAACkC,MAAZ,CAAmBxB,SAAS,IAAIA,SAAS,CAAC,CAAD,CAAzC,EACYD,GADZ,CACiBC,SAAD,iBACrB,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,QAAD;AAAU,MAAA,WAAW,EAAEA,SAAS,CAAC,CAAD,CAAhC;AACI,MAAA,IAAI,EAAEA,SAAS,CAAC,CAAD,CADnB;AAEI,MAAA,EAAE,EAAEA,SAAS,CAAC,CAAD,CAFjB;AAGI,MAAA,KAAK,EAAEA,SAAS,CAAC,CAAD,CAHpB;AAII,MAAA,WAAW,EAAGyB,CAAC,IAAI;AAACnC,QAAAA,WAAW,CAACmC,CAAC,CAACC,MAAF,CAASC,EAAV,CAAX,CAAyB,CAAzB,IAA4BF,CAAC,CAACG,MAAF,CAASC,KAArC;AAA4CtC,QAAAA,cAAc,CAACD,WAAD,CAAd;AAA6BK,QAAAA,OAAO,CAACC,GAAR,CAAYN,WAAZ;AAAyB,OAJ1H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAFK,CAAT;AAUE;;AACN,sBAAO,uDACP,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEgB,OAAO,iBAAI,oBAAC,MAAD;AAAQ,IAAA,MAAM,EAAC,OAAf;AAAuB,IAAA,GAAG,EAAEA,OAAO,CAACwB,OAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADb,CADJ,CADJ,eAMI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,MAAjB;AACI,IAAA,OAAO,EAAE,MAAMtB,eAAe,EADlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI,oBAAC,OAAD;AAAS,IAAA,IAAI,EAAC,WAAd;AAA0B,IAAA,GAAG,EAAEF,OAAO,GAAGhC,aAAH,GAAmBD,MAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADA,CADJ,CANJ,CADO,EAgBNiD,MAhBM,eAiBP,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,MAAjB;AACQ,IAAA,UAAU,EAAC,cADnB;AAEQ,IAAA,OAAO,EAAE,MAAML,MAAM,CAAClC,QAAD,EAAWO,WAAX,EAAwBgB,OAAxB,CAF7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGI,oBAAC,OAAD;AAAS,IAAA,IAAI,EAAElC,IAAf;AAAqB,IAAA,IAAI,EAAC,WAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CADJ,CADJ,eAQI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,MAAjB;AACI,IAAA,OAAO,EAAG,MAAM0C,OAAO,EAD3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEQ,oBAAC,OAAD;AAAS,IAAA,IAAI,EAAE3C,KAAf;AAAsB,IAAA,IAAI,EAAC,WAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFR,CADA,CARJ,CADJ,CAjBO,CAAP;AAoCH,CA3HM","sourcesContent":["import React from 'react'\nimport { useState, useEffect } from 'react'\n\nimport { IonPage, IonCard, IonHeader, IonToolbar, IonBackButton, IonContent, IonTitle, IonButtons, IonTextarea,\n    IonCardContent, IonLabel, IonItem, IonInput, IonGrid, IonRow, IonCol, IonIcon, IonButton, IonImg} from '@ionic/react'\n\nimport { trash, save, camera, cameraReverse} from 'ionicons/icons'\n\n//import { beansDataFileName } from '../objects/filenames'\nimport { storeData, readSettings } from '../backend/data'\n\nimport { useCamera, availableFeatures } from '@ionic/react-hooks/camera';\nimport { CameraResultType } from '@capacitor/core'\n\n//import './add-items.css'\n\n\nexport const AddItems = (defaultSetttings, settingsFileName, fileName) => {\n\n    const [settings, setSettings] = useState([])\n    const [isFileRead, setIsFileRead] = useState([false])\n    const [newArray, setNewArray] = useState([])\n    const [inputValues, setInputValues] = useState([])\n    \nconst fileSettingsRead = async () => {\n    setIsFileRead(true)\n    let fields = []\n    let fileContent =  await readSettings(settingsFileName)\n    console.log('filecontent:', fileContent)\n    if (fileContent) {   //if filename doesn't exist readSettings will return false    \n        fields = JSON.parse(fileContent)\n       // console.log('fields:', fields)\n    } else {\n        fields = defaultSetttings\n    }\n    setSettings(fields)\n    setNewArray(settings.map((arrayItem, index) => arrayItem.concat([index, ''])))\n    setInputValues(JSON.parse(JSON.stringify(newArray)))\n}   \n\nif(isFileRead === false) {fileSettingsRead()}\n\n\n    //const [newArray, setNewArray] = useState(settings.map((arrayItem, index) => arrayItem.concat([index, ''])))\n    //let newArray = array.map((arrayItem, index) => arrayItem.concat([index, '']))\n    // example of arrray ['Bean', true, 0, '']\n    // => Bean is the field title; true if it should be displayed; 0 is the index; '' will be filled with content eg. Malabar \n    console.log(newArray)\n\n    \n\n\n\n\n\n\n    let { photo, getPhoto } = useCamera();\n    const  [ myPhoto, setMyPhoto ] = useState(photo)\n\n    const handleTakePhoto = async () => {\n        if(availableFeatures.getPhoto) {\n         await getPhoto({\n            quality: 100,\n            allowEditing: false,\n            resultType: CameraResultType.DataUrl,\n            height: 1000\n            })\n        }\n    }\n\n    useEffect(() => setMyPhoto(photo), [photo])\n\n    const delFunc = () => {\n        //console.log('newarray1:',newArray)\n        setInputValues(inputValues.map(arrayItem => arrayItem.splice(0,3).concat([''])))\n        console.log('inputvalueSSS:', inputValues)\n        //setNewArray()\n        setMyPhoto(undefined)\n        //console.log('newarray2:',newArray)\n    }\n\n    const saveIt = async (fileName, array, photo) => {\n\n        // https://stackoverflow.com/questions/42974735/create-object-from-array\n        const objectToSave = array.reduce(( o, arrayItem) => ({...o, [arrayItem[0]]:arrayItem[3] }) , {})\n        await storeData(fileName, objectToSave, photo)\n        delFunc()\n    }\n    \n    //debugger\n    console.log('newarray1:',newArray)\n    let result\n    if (inputValues.length > 0){\n        result = inputValues.filter(arrayItem => arrayItem[1])\n                            .map((arrayItem) => \n            <IonItem>\n                <IonInput placeholder={arrayItem[0]}\n                    name={arrayItem[0]}\n                    id={arrayItem[2]}\n                    value={arrayItem[3]}\n                    onIonChange={ e => {inputValues[e.target.id][3]=e.detail.value; setInputValues(inputValues); console.log(inputValues)}}\n                ></IonInput>\n            </IonItem>  \n        )}\n    return(<>\n    <IonGrid>\n        <IonRow>\n            <IonCol>\n            { myPhoto && <IonImg height='200px' src={myPhoto.dataUrl} />}\n            </IonCol>\n        </IonRow>\n        <IonRow>\n            <IonCol>\n            <IonButton color='dark'\n                onClick={() => handleTakePhoto()}>\n                <IonIcon slot='icon-only' src={myPhoto ? cameraReverse : camera}/>\n            </IonButton>\n            </IonCol>\n        </IonRow>\n    </IonGrid>\n    {result}\n    <IonGrid>\n        <IonRow>\n            <IonCol>\n                <IonButton color='dark'\n                        routerLink='./Show-beans'\n                        onClick={() => saveIt(fileName, inputValues, myPhoto)} >\n                    <IonIcon icon={save} slot='icon-only'/>\n                </IonButton>\n            </IonCol>\n            <IonCol>\n            <IonButton color='dark'\n                onClick={ () => delFunc()}>\n                    <IonIcon icon={trash} slot='icon-only'/>\n                </IonButton>\n            </IonCol>\n        </IonRow>\n    </IonGrid>\n    </>\n    )\n}\n\n"]},"metadata":{},"sourceType":"module"}