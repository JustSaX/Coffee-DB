{"ast":null,"code":"var _jsxFileName = \"/mnt/Data/Javascript_code/Ionic/coffee-db3/src/components/frontend/sort-items.js\";\nimport React, { useEffect, useLayoutEffect, useContext, useState, useReducer } from 'react';\nimport { IonItem, IonReorder, IonReorderGroup, IonItemDivider, IonCheckbox, IonGrid, IonRow, IonCol, IonLabel, IonContent, IonButton, IonIcon, IonButtons, IonInput, IonTextarea } from '@ionic/react';\nimport { trash, save, close, addCircle } from 'ionicons/icons';\nimport { readSettings, overWriteFile } from '../backend/data';\nimport { store } from '../backend/data'; // fields is the basic array of fields that's available upon installation\n\n/*\nconst fields = [\n    ['Bohne', true],\n    ['RÃ¶ster', true],\n    ['Kommentar', false]]\n\nconst fileName = 'data/beans-settings.data'\n*/\n//let isFileRead = false\n//let fields = []\n\nexport const SortItems = (fileName, defaultSettings) => {\n  const globalState = useContext(store);\n  const {\n    state,\n    dispatch\n  } = globalState;\n  const [ignored, forceUpdate] = useReducer(x => x + 1, 0); // this function will force an updated of the dom\n\n  const [items, setItems] = useState(state.beans.settings);\n  const [tempItems, setTempItems] = useState(state.beans.settings);\n  const [tempItem, setTempItem] = useState('');\n  const [isFileRead, setIsFileRead] = useState(false); //const [counter, setCounter] = useState([0])\n  //const [counter2, setCounter2] = useState([0])\n  // counter is executed everytime save or cancel is presed. And will then be used to run the useeffect hook on the next render and reload the file setting \n\n  /*\n  const fileRead = async () => {\n      let fields = []\n      console.log('i m in fields')\n      //let fields = []\n      let fileContent =  await readSettings(fileName)\n      console.log('filecontent:', fileContent)\n      if (fileContent) {   //if filename doesn't exist readSettings will return false    \n          fields = JSON.parse(fileContent)\n          console.log('fields:', fields)\n      } else {\n          fields = defaultSettings\n      }\n       setItems(JSON.parse(JSON.stringify(fields)))\n      setTempItems(JSON.parse(JSON.stringify(fields)))\n      setIsFileRead(true)    \n   }\n  if(isFileRead === false){fileRead()}    */\n  //useEffect( () => { console.log('rerender'); }, [isFileRead])\n  //fileRead()  //will be always loaded the page is opened, or on every rerender? Dangerous if rerender!\n\n  const fileSave = async (fileName, object) => {\n    await overWriteFile(fileName, object);\n    setIsFileRead(false);\n  };\n\n  const addItem = (newItem, arrayOfItems) => {\n    //const tempVar = items\n    arrayOfItems.push([newItem, true]);\n    setItems(arrayOfItems);\n    setTempItem('');\n    console.log(items);\n  }; // copied from the documentation:\n\n\n  function doReorder(itemsSort, event) {\n    // The `from` and `to` properties contain the index of the item\n    // when the drag started and ended, respectively\n    console.log('Dragged from index', event.detail.from, 'to', event.detail.to); // Finish the reorder and position the item in the DOM based on\n    // where the gesture ended. This method can also be called directly\n    // by the reorder group\n    //event.detail.complete();\n    //event.detail.complete(true);\n\n    const newIndex = event.detail.to;\n    const oldIndex = event.detail.from; //let newItems = [...itemsSort]\n\n    itemsSort = event.detail.complete(itemsSort);\n    setItems(itemsSort);\n    console.log('tempits:', tempItems);\n  }\n\n  const delItem = (index, arrayToDeleteFrom) => {\n    arrayToDeleteFrom.splice(index, 1);\n    setItems(arrayToDeleteFrom);\n    forceUpdate();\n  };\n\n  const checkBox = (index, state, arrayToCheck) => {\n    arrayToCheck[index][1] = state;\n    setItems(arrayToCheck);\n    console.log(items);\n  }; //useEffect(()=> console.log('USE EFFECT'), [counter])\n\n\n  const displayItems = itemsToDisplay => {\n    const result = itemsToDisplay.map((arrayItem, index) => /*#__PURE__*/React.createElement(IonItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(IonCheckbox, {\n      slot: \"start\",\n      color: \"dark\",\n      checked: arrayItem[1],\n      name: index,\n      onIonChange: e => checkBox(e.target.name, e.detail.checked, items),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(IonLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }\n    }, arrayItem[0]), /*#__PURE__*/React.createElement(IonButton, {\n      color: \"dark\",\n      name: index,\n      onClick: e => delItem(e.target.name, items),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(IonIcon, {\n      icon: trash,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 31\n      }\n    })), /*#__PURE__*/React.createElement(IonReorder, {\n      slot: \"end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }\n    })));\n    return result;\n  };\n\n  return /*#__PURE__*/React.createElement(IonContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IonItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonLabel, {\n    slot: \"start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 17\n    }\n  }, \"Anzeigen\"), /*#__PURE__*/React.createElement(IonLabel, {\n    slot: \"end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 17\n    }\n  }, \"Reihenfolge\")), /*#__PURE__*/React.createElement(IonReorderGroup, {\n    disabled: false,\n    onIonItemReorder: e => doReorder(items, e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  }, displayItems(items)), /*#__PURE__*/React.createElement(IonItem, {\n    class: \"ion-padding\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IonInput, {\n    background: \"dark\",\n    placeholder: \"Feld hinzuf\\xFCgen\",\n    onIonChange: e => setTempItem(e.detail.value),\n    value: tempItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(IonButton, {\n    color: \"dark\",\n    style: {\n      height: '35px',\n      width: '35px'\n    },\n    onClick: () => addItem(tempItem, items),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonIcon, {\n    icon: addCircle,\n    style: {\n      fontSize: '50px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(IonGrid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 22\n    }\n  }, /*#__PURE__*/React.createElement(IonCol, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 30\n    }\n  }, /*#__PURE__*/React.createElement(IonButton, {\n    color: \"dark\",\n    class: \"ion-text-capitalize\",\n    size: \"default\",\n    routerLink: \"./Home\",\n    onClick: () => {\n      fileSave(fileName, items);\n      /*setCounter(counter+1)*/\n\n      ;\n      /*setTempItems(items)*/\n\n      ;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonIcon, {\n    icon: save,\n    slot: \"start\",\n    size: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 22\n    }\n  }), \"Speichern\")), /*#__PURE__*/React.createElement(IonCol, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonButton, {\n    color: \"dark\",\n    class: \"ion-text-capitalize\",\n    size: \"default\",\n    routerLink: \"./Home\",\n    onClick: () => {\n      setItems(tempItems);\n      console.log('tempitems:', tempItems);\n      /*setCounter(counter+1)*/\n\n      ;\n      setIsFileRead(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonIcon, {\n    icon: close,\n    slot: \"start\",\n    size: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 22\n    }\n  }), \"Abbrechen\")))));\n};","map":{"version":3,"sources":["/mnt/Data/Javascript_code/Ionic/coffee-db3/src/components/frontend/sort-items.js"],"names":["React","useEffect","useLayoutEffect","useContext","useState","useReducer","IonItem","IonReorder","IonReorderGroup","IonItemDivider","IonCheckbox","IonGrid","IonRow","IonCol","IonLabel","IonContent","IonButton","IonIcon","IonButtons","IonInput","IonTextarea","trash","save","close","addCircle","readSettings","overWriteFile","store","SortItems","fileName","defaultSettings","globalState","state","dispatch","ignored","forceUpdate","x","items","setItems","beans","settings","tempItems","setTempItems","tempItem","setTempItem","isFileRead","setIsFileRead","fileSave","object","addItem","newItem","arrayOfItems","push","console","log","doReorder","itemsSort","event","detail","from","to","newIndex","oldIndex","complete","delItem","index","arrayToDeleteFrom","splice","checkBox","arrayToCheck","displayItems","itemsToDisplay","result","map","arrayItem","e","target","name","checked","value","height","width","fontSize"],"mappings":"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","sourcesContent":["import React, { useEffect, useLayoutEffect, useContext, useState, useReducer} from 'react'\nimport { IonItem, IonReorder, IonReorderGroup, IonItemDivider, IonCheckbox, IonGrid, IonRow, IonCol,\n    IonLabel, IonContent, IonButton, IonIcon, IonButtons, IonInput, IonTextarea } from '@ionic/react'\n\nimport { trash, save, close, addCircle } from 'ionicons/icons'\n\nimport { readSettings, overWriteFile } from '../backend/data'\nimport { store } from '../backend/data'\n\n// fields is the basic array of fields that's available upon installation\n/*\nconst fields = [\n    ['Bohne', true],\n    ['RÃ¶ster', true],\n    ['Kommentar', false]]\n\nconst fileName = 'data/beans-settings.data'\n*/\n//let isFileRead = false\n\n//let fields = []\n\nexport const SortItems = (fileName, defaultSettings) => {\n    \n    const globalState = useContext(store)\n    const { state, dispatch } = globalState\n\n    const [ignored, forceUpdate] = useReducer(x => x + 1, 0) // this function will force an updated of the dom\n    const [items, setItems] = useState(state.beans.settings)\n    const [tempItems, setTempItems] = useState(state.beans.settings)\n    const [tempItem, setTempItem] = useState('')\n    const [isFileRead, setIsFileRead] = useState(false)\n    //const [counter, setCounter] = useState([0])\n    //const [counter2, setCounter2] = useState([0])\n    // counter is executed everytime save or cancel is presed. And will then be used to run the useeffect hook on the next render and reload the file setting \n    \n\n    /*\n    const fileRead = async () => {\n        let fields = []\n        console.log('i m in fields')\n        //let fields = []\n        let fileContent =  await readSettings(fileName)\n        console.log('filecontent:', fileContent)\n        if (fileContent) {   //if filename doesn't exist readSettings will return false    \n            fields = JSON.parse(fileContent)\n            console.log('fields:', fields)\n        } else {\n            fields = defaultSettings\n        }\n\n        setItems(JSON.parse(JSON.stringify(fields)))\n        setTempItems(JSON.parse(JSON.stringify(fields)))\n        setIsFileRead(true)    \n\n    }\n    if(isFileRead === false){fileRead()}    */\n    //useEffect( () => { console.log('rerender'); }, [isFileRead])\n\n\n    //fileRead()  //will be always loaded the page is opened, or on every rerender? Dangerous if rerender!\n    \n    const fileSave = async (fileName, object) => {\n        await overWriteFile(fileName, object)\n        setIsFileRead(false)\n    }\n\n    const addItem = (newItem, arrayOfItems) => {\n        //const tempVar = items\n        arrayOfItems.push([newItem, true])\n        setItems(arrayOfItems)\n        setTempItem('')\n        console.log(items)\n        \n    }\n\n\n// copied from the documentation:\n    function doReorder(itemsSort, event) {\n\n        // The `from` and `to` properties contain the index of the item\n        // when the drag started and ended, respectively\n        console.log('Dragged from index', event.detail.from, 'to', event.detail.to);\n        // Finish the reorder and position the item in the DOM based on\n        // where the gesture ended. This method can also be called directly\n        // by the reorder group\n        //event.detail.complete();\n        //event.detail.complete(true);\n        const newIndex = event.detail.to\n        const oldIndex = event.detail.from\n        //let newItems = [...itemsSort]\n\n        itemsSort = event.detail.complete(itemsSort)\n        setItems(itemsSort)\n        console.log('tempits:',tempItems)\n    }\n    const delItem = (index, arrayToDeleteFrom) => {\n        arrayToDeleteFrom.splice(index, 1)\n        setItems(arrayToDeleteFrom)\n        forceUpdate()\n    }\n\n    const checkBox = (index, state, arrayToCheck) => {\n        arrayToCheck[index][1]=state\n        setItems(arrayToCheck)\n        console.log(items)\n    }\n\n    //useEffect(()=> console.log('USE EFFECT'), [counter])\n\n    const displayItems = (itemsToDisplay) => {\n        const result = itemsToDisplay.map((arrayItem, index) => \n            <IonItem>\n                <IonCheckbox slot='start' color='dark' checked={arrayItem[1]}\n                        name={index}\n                        onIonChange={ e => checkBox(e.target.name, e.detail.checked, items) }/>\n                <IonLabel>{arrayItem[0]}</IonLabel>\n                <IonButton color='dark'\n                            name={index}\n                            onClick={ e => delItem(e.target.name, items)}\n                            > <IonIcon icon={trash}/></IonButton>\n                <IonReorder slot='end'/>\n            </IonItem>\n            )\n    return result\n    }\n\n\n    return (\n        <IonContent>\n            <IonItem>\n                <IonLabel slot='start'>Anzeigen</IonLabel>\n                <IonLabel slot='end'>Reihenfolge</IonLabel>\n            </IonItem>\n            \n            <IonReorderGroup disabled={false}  onIonItemReorder={ (e) => doReorder(items, e)}>\n                {displayItems(items)}\n            </IonReorderGroup>\n        \n        <IonItem class='ion-padding'>\n            <IonInput background='dark'\n                    placeholder='Feld hinzufÃ¼gen'\n                    onIonChange={e => setTempItem(e.detail.value)} value={tempItem}></IonInput>\n            <IonButton color='dark' style={{height: '35px', width: '35px'}} \n                    onClick={() => addItem(tempItem,items)}>\n                    <IonIcon icon={addCircle} style={{fontSize: '50px'}}  />\n                    </IonButton>\n        </IonItem>\n\n            <IonGrid><IonRow><IonCol>\n            {/* Save */}\n            <IonButton color='dark'\n                    class=\"ion-text-capitalize\"\n                    size='default'\n                    routerLink='./Home'\n                    onClick={() => {fileSave(fileName, items); /*setCounter(counter+1)*/; /*setTempItems(items)*/; }}\n                    ><IonIcon icon={save} slot='start'size='large'/>Speichern</IonButton>\n            </IonCol>\n            <IonCol>\n            {/* Cancel */}          \n            <IonButton color='dark'\n                    class=\"ion-text-capitalize\"\n                    size='default'\n                    routerLink='./Home'\n                    onClick={() => {setItems(tempItems); console.log('tempitems:', tempItems); /*setCounter(counter+1)*/; setIsFileRead(false)}}\n                    ><IonIcon icon={close} slot='start' size='large'/>Abbrechen</IonButton>\n            </IonCol></IonRow></IonGrid>\n        </IonContent>\n          \n\n    )\n}"]},"metadata":{},"sourceType":"module"}