{"ast":null,"code":"var _jsxFileName = \"/mnt/Data/Javascript_code/Ionic/coffe-db/src/pages/Beans-settings.js\";\nimport React from 'react';\nimport { IonPage, IonContent, IonItem, IonHeader, IonToolbar, IonButtons, IonBackButton, IonTitle, IonText } from '@ionic/react';\nimport { SortItems } from '../components/frontend/sort-items';\nimport { readSettings } from '../components/backend/data';\nconst fileName = 'data/beans-settings.data'; //filename übergeben\n\nlet fields = [];\n\nconst fileRead = async () => {\n  //let fields = []\n  let fileContent = await readSettings(fileName);\n  console.log('filecontent:', fileContent);\n\n  if (fileContent) {\n    //if filename doesn't exist readSettings will return false    \n    fields = JSON.parse(fileContent);\n    console.log('fields:', fields);\n  } else {\n    //below is the basic fields that are available upon installation\n    fields = [['Bohne', true], ['Röster', true], ['Kommentar', false]];\n  }\n};\n\nfields = JSON.parse(JSON.stringify(fields));\nlet test = fileRead();\nconsole.log('test:', test);\nconsole.log('ich war hier');\n/*const fields = [\n    ['Bohne', true],\n    ['Röster', true],\n    ['Kommentar', false]] */\n//debugger\n\nexport const BeansSettings = () => {\n  return /*#__PURE__*/React.createElement(IonPage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IonHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonToolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(IonTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, \"Einstellungen Bohnen\")), /*#__PURE__*/React.createElement(IonItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(IonText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }\n  }, \"Hier kann festgelegt werden, welche Felder zum Anlegen von Bohnen zur Verf\\xFCgung stehen und in welcher Reihenfolge sie angezeigt werden.\"))), /*#__PURE__*/React.createElement(IonContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, SortItems(fileName, fields)));\n};","map":{"version":3,"sources":["/mnt/Data/Javascript_code/Ionic/coffe-db/src/pages/Beans-settings.js"],"names":["React","IonPage","IonContent","IonItem","IonHeader","IonToolbar","IonButtons","IonBackButton","IonTitle","IonText","SortItems","readSettings","fileName","fields","fileRead","fileContent","console","log","JSON","parse","stringify","test","BeansSettings"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,EAAiBC,UAAjB,EAA6BC,OAA7B,EAAsCC,SAAtC,EACIC,UADJ,EACgBC,UADhB,EAC4BC,aAD5B,EAC2CC,QAD3C,EACqDC,OADrD,QACmE,cADnE;AAGA,SAASC,SAAT,QAA0B,mCAA1B;AAEA,SAASC,YAAT,QAA6B,4BAA7B;AAEA,MAAMC,QAAQ,GAAG,0BAAjB,C,CAA6C;;AAE7C,IAAIC,MAAM,GAAG,EAAb;;AACA,MAAMC,QAAQ,GAAG,YAAY;AACzB;AACA,MAAIC,WAAW,GAAI,MAAMJ,YAAY,CAACC,QAAD,CAArC;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BF,WAA5B;;AACA,MAAIA,WAAJ,EAAiB;AAAI;AACjBF,IAAAA,MAAM,GAAGK,IAAI,CAACC,KAAL,CAAWJ,WAAX,CAAT;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBJ,MAAvB;AACH,GAHD,MAGO;AACH;AACAA,IAAAA,MAAM,GAAG,CACL,CAAC,OAAD,EAAU,IAAV,CADK,EAEL,CAAC,QAAD,EAAW,IAAX,CAFK,EAGL,CAAC,WAAD,EAAc,KAAd,CAHK,CAAT;AAIH;AAEJ,CAfD;;AAgBAA,MAAM,GAAGK,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeP,MAAf,CAAX,CAAT;AAEA,IAAIQ,IAAI,GAAGP,QAAQ,EAAnB;AACAE,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBI,IAArB;AACAL,OAAO,CAACC,GAAR,CAAY,cAAZ;AAIA;;;;AAKA;;AAEA,OAAO,MAAMK,aAAa,GAAG,MAAM;AAC/B,sBACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADA,CADJ,eAKI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kJADJ,CALJ,CADJ,eAUQ,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKZ,SAAS,CAACE,QAAD,EAAWC,MAAX,CADd,CAVR,CADJ;AAgBH,CAjBM","sourcesContent":["import React from 'react'\nimport {IonPage, IonContent, IonItem, IonHeader,\n    IonToolbar, IonButtons, IonBackButton, IonTitle, IonText} from '@ionic/react'\n\nimport { SortItems } from '../components/frontend/sort-items'\n\nimport { readSettings } from '../components/backend/data'\n\nconst fileName = 'data/beans-settings.data'  //filename übergeben\n\nlet fields = []\nconst fileRead = async () => {\n    //let fields = []\n    let fileContent =  await readSettings(fileName)\n    console.log('filecontent:', fileContent)\n    if (fileContent) {   //if filename doesn't exist readSettings will return false    \n        fields = JSON.parse(fileContent)\n        console.log('fields:', fields)\n    } else {\n        //below is the basic fields that are available upon installation\n        fields = [\n            ['Bohne', true],\n            ['Röster', true],\n            ['Kommentar', false]]\n    }\n\n}   \nfields = JSON.parse(JSON.stringify(fields))\n\nlet test = fileRead()\nconsole.log('test:', test)\nconsole.log('ich war hier')\n\n\n\n/*const fields = [\n    ['Bohne', true],\n    ['Röster', true],\n    ['Kommentar', false]] */\n\n//debugger\n\nexport const BeansSettings = () => {\n    return (\n        <IonPage>\n            <IonHeader>\n                <IonToolbar>\n                <IonTitle>Einstellungen Bohnen</IonTitle>\n                \n                </IonToolbar>\n                <IonItem>\n                    <IonText>Hier kann festgelegt werden, welche Felder zum Anlegen von Bohnen zur Verfügung stehen und in welcher Reihenfolge sie angezeigt werden.</IonText>\n                </IonItem>\n                </IonHeader>\n                <IonContent>\n                    {SortItems(fileName, fields)}\n                </IonContent>\n        </IonPage>\n    )\n}   "]},"metadata":{},"sourceType":"module"}