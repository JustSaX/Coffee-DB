{"ast":null,"code":"import { readPicture } from '../backend/data'; // createTable returns an array containing per line an object with the stored data\n// e.g. [{id:51346431, date:02.01.2020}]\n\nexport const createTable = stringData => {\n  const stringArray = stringData.split('\\n');\n  console.log(stringArray);\n  const header = Object.keys(JSON.parse(stringArray[0])); // array from all the keys\n\n  let tableData = []; // console.log('in tabledata:')\n\n  for (let i = 0; i < stringArray.length; i++) {\n    tableData.push(JSON.parse(stringArray[i]));\n    console.log(typeof tableData);\n    console.log(tableData);\n  }\n\n  return tableData;\n};\nexport const picData = async (array, filename) => {\n  const folder = filename.split('/')[0];\n  const picArray = [];\n\n  const createPicArray = async () => {\n    for (let i = 0; i < array.length; i++) {\n      const temp = await readPicture(folder + '/' + array[i].id.toString() + '.jpeg');\n      picArray.push(temp);\n    }\n  };\n\n  createPicArray();\n  return picArray;\n};","map":{"version":3,"sources":["/mnt/Data/Javascript_code/Ionic/coffee-db4/src/components/frontend/create-table.js"],"names":["readPicture","createTable","stringData","stringArray","split","console","log","header","Object","keys","JSON","parse","tableData","i","length","push","picData","array","filename","folder","picArray","createPicArray","temp","id","toString"],"mappings":"AAAA,SAASA,WAAT,QAA4B,iBAA5B,C,CAIA;AACA;;AACA,OAAO,MAAMC,WAAW,GAAIC,UAAD,IAAgB;AAEvC,QAAMC,WAAW,GAAGD,UAAU,CAACE,KAAX,CAAiB,IAAjB,CAApB;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,WAAZ;AACA,QAAMI,MAAM,GAAGC,MAAM,CAACC,IAAP,CAAYC,IAAI,CAACC,KAAL,CAAWR,WAAW,CAAC,CAAD,CAAtB,CAAZ,CAAf,CALuC,CAKiB;;AACxD,MAAIS,SAAS,GAAG,EAAhB,CANuC,CAOvC;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGV,WAAW,CAACW,MAAhC,EAAwCD,CAAC,EAAzC,EAA4C;AAC1CD,IAAAA,SAAS,CAACG,IAAV,CAAeL,IAAI,CAACC,KAAL,CAAWR,WAAW,CAACU,CAAD,CAAtB,CAAf;AAEAR,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAOM,SAAnB;AACAP,IAAAA,OAAO,CAACC,GAAR,CAAYM,SAAZ;AAED;;AAED,SAAOA,SAAP;AACD,CAjBI;AAuBP,OAAO,MAAMI,OAAO,GAAG,OAAOC,KAAP,EAAcC,QAAd,KAA2B;AAE9C,QAAMC,MAAM,GAAGD,QAAQ,CAACd,KAAT,CAAe,GAAf,EAAoB,CAApB,CAAf;AAED,QAAMgB,QAAQ,GAAG,EAAjB;;AACA,QAAMC,cAAc,GAAG,YAAY;AAC/B,SAAK,IAAIR,CAAC,GAAC,CAAX,EAAcA,CAAC,GAACI,KAAK,CAACH,MAAtB,EAA8BD,CAAC,EAA/B,EAAkC;AAC9B,YAAMS,IAAI,GAAG,MAAMtB,WAAW,CAACmB,MAAM,GAAG,GAAT,GAAeF,KAAK,CAACJ,CAAD,CAAL,CAASU,EAAT,CAAYC,QAAZ,EAAf,GAAwC,OAAzC,CAA9B;AACAJ,MAAAA,QAAQ,CAACL,IAAT,CAAcO,IAAd;AAEH;AACJ,GAND;;AAODD,EAAAA,cAAc;AAEf,SAAOD,QAAP;AACA,CAfM","sourcesContent":["import { readPicture } from '../backend/data'\n\n\n\n// createTable returns an array containing per line an object with the stored data\n// e.g. [{id:51346431, date:02.01.2020}]\nexport const createTable = (stringData) => {\n\n    const stringArray = stringData.split('\\n')\n\n    console.log(stringArray)\n    const header = Object.keys(JSON.parse(stringArray[0]))  // array from all the keys\n    let tableData = []\n    // console.log('in tabledata:')\n    for (let i = 0; i < stringArray.length; i++){\n      tableData.push(JSON.parse(stringArray[i]))\n\n      console.log(typeof tableData)\n      console.log(tableData)\n    \n    }\n\n    return tableData  \n  }\n\n\n\n\n\nexport const picData = async (array, filename) => {\n\n    const folder = filename.split('/')[0]\n\n   const picArray = []\n   const createPicArray = async () => {\n       for (let i=0; i<array.length; i++){\n           const temp = await readPicture(folder + '/' + array[i].id.toString() + '.jpeg')\n           picArray.push(temp)\n\n       }\n   }\n  createPicArray()\n\n return picArray\n}\n"]},"metadata":{},"sourceType":"module"}