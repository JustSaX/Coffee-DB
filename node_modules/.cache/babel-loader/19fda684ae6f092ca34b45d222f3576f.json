{"ast":null,"code":"var _jsxFileName = \"/mnt/Data/Javascript_code/Ionic/coffee-db3/src/components/frontend/sort-items.js\";\nimport React, { useContext, useState, useReducer } from 'react';\nimport { IonItem, IonReorder, IonReorderGroup, IonItemDivider, IonCheckbox, IonGrid, IonRow, IonCol, IonLabel, IonContent, IonButton, IonIcon, IonButtons, IonInput, IonTextarea } from '@ionic/react';\nimport { trash, save, close, addCircle } from 'ionicons/icons';\nimport { readSettings, overWriteFile } from '../backend/data';\nimport { store } from '../backend/store'; // fields is the basic array of fields that's available upon installation\n\n/*\nconst fields = [\n    ['Bohne', true],\n    ['RÃ¶ster', true],\n    ['Kommentar', false]]\n\nconst fileName = 'data/beans-settings.data'\n*/\n\nexport const SortItems = (fileName, defaultSettings) => {\n  const globalState = useContext(store);\n  const {\n    state,\n    dispatch\n  } = globalState;\n  const [ignored, forceUpdate] = useReducer(x => x + 1, 0); // this function will force an updated of the dom\n\n  const [tempItem, setTempItem] = useState('');\n\n  const reducer = (myState, action) => {\n    let tempArray = JSON.parse(JSON.stringify(myState));\n\n    switch (action.type) {\n      case 'swap':\n        return action.value;\n\n      case 'addRow':\n        tempArray.push([action.itemName, true]);\n        return tempArray;\n\n      case 'delRow':\n        //tempArray = JSON.parse(JSON.stringify(state))\n        tempArray.splice(action.index, 1);\n        return tempArray;\n      //return state.splice(action.index, 1)\n\n      case 'check':\n        tempArray[action.index][1] = action.checkState;\n        return tempArray;\n      //return state[action.index][1] = action.checkState\n\n      case 'reset':\n        return JSON.parse(JSON.stringify(state.beans.settings));\n\n      default:\n        throw new Error();\n    }\n  };\n\n  const [items, setItems] = useReducer(reducer, JSON.parse(JSON.stringify(state.beans.settings)));\n\n  const fileSave = async (fileName, object) => {\n    await overWriteFile(fileName, object);\n    dispatch({\n      type: 'setBeansSettings',\n      value: object\n    });\n  };\n\n  const addItem = (newItem, arrayOfItems) => {\n    setItems({\n      type: 'addRow',\n      itemName: newItem\n    });\n    setTempItem('');\n  }; // copied from the documentation:\n\n\n  function doReorder(itemsSort, event) {\n    itemsSort = event.detail.complete(itemsSort);\n    setItems({\n      type: 'swap',\n      value: itemsSort\n    });\n  }\n\n  const delItem = (index, arrayToDeleteFrom) => {\n    setItems({\n      type: 'delRow',\n      index: index\n    });\n    forceUpdate();\n  };\n\n  const checkBox = (index, checkState, arrayToCheck) => {\n    setItems({\n      type: 'check',\n      index: index,\n      checkState: checkState\n    });\n  };\n\n  const displayItems = itemsToDisplay => {\n    const result = itemsToDisplay.map((arrayItem, index) => /*#__PURE__*/React.createElement(IonItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(IonCheckbox, {\n      slot: \"start\",\n      color: \"dark\",\n      checked: arrayItem[1],\n      name: index,\n      onIonChange: e => checkBox(e.target.name, e.detail.checked, JSON.parse(JSON.stringify(items))),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(IonLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }\n    }, arrayItem[0]), /*#__PURE__*/React.createElement(IonButton, {\n      color: \"dark\",\n      name: index,\n      onClick: e => delItem(e.target.name, JSON.parse(JSON.stringify(items))),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(IonIcon, {\n      icon: trash,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 31\n      }\n    })), /*#__PURE__*/React.createElement(IonReorder, {\n      slot: \"end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }\n    })));\n    return result;\n  };\n\n  console.log('itemsbefore display', items);\n  const toDisplay = displayItems(items);\n  return /*#__PURE__*/React.createElement(IonContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IonItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonLabel, {\n    slot: \"start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }\n  }, \"Anzeigen\"), /*#__PURE__*/React.createElement(IonLabel, {\n    slot: \"end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 17\n    }\n  }, \"Reihenfolge\")), /*#__PURE__*/React.createElement(IonReorderGroup, {\n    disabled: false,\n    onIonItemReorder: e => doReorder(items, e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }, toDisplay), /*#__PURE__*/React.createElement(IonItem, {\n    class: \"ion-padding\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IonInput, {\n    background: \"dark\",\n    placeholder: \"Feld hinzuf\\xFCgen\",\n    onIonChange: e => setTempItem(e.detail.value),\n    value: tempItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(IonButton, {\n    color: \"dark\",\n    style: {\n      height: '35px',\n      width: '35px'\n    },\n    onClick: () => addItem(tempItem, items),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonIcon, {\n    icon: addCircle,\n    style: {\n      fontSize: '50px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(IonGrid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 22\n    }\n  }, /*#__PURE__*/React.createElement(IonCol, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 30\n    }\n  }, /*#__PURE__*/React.createElement(IonButton, {\n    color: \"dark\",\n    class: \"ion-text-capitalize\",\n    size: \"default\",\n    routerLink: \"./Home\",\n    onClick: () => {\n      fileSave(fileName, items);\n      /*setCounter(counter+1)*/\n\n      ;\n      /*setTempItems(items)*/\n\n      ;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonIcon, {\n    icon: save,\n    slot: \"start\",\n    size: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 22\n    }\n  }), \"Speichern\")), /*#__PURE__*/React.createElement(IonCol, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonButton, {\n    color: \"dark\",\n    class: \"ion-text-capitalize\",\n    size: \"default\",\n    onClick: () => setItems({\n      type: 'reset'\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonIcon, {\n    icon: close,\n    slot: \"start\",\n    size: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 22\n    }\n  }), \"Abbrechen\")))), \"  \");\n};","map":{"version":3,"sources":["/mnt/Data/Javascript_code/Ionic/coffee-db3/src/components/frontend/sort-items.js"],"names":["React","useContext","useState","useReducer","IonItem","IonReorder","IonReorderGroup","IonItemDivider","IonCheckbox","IonGrid","IonRow","IonCol","IonLabel","IonContent","IonButton","IonIcon","IonButtons","IonInput","IonTextarea","trash","save","close","addCircle","readSettings","overWriteFile","store","SortItems","fileName","defaultSettings","globalState","state","dispatch","ignored","forceUpdate","x","tempItem","setTempItem","reducer","myState","action","tempArray","JSON","parse","stringify","type","value","push","itemName","splice","index","checkState","beans","settings","Error","items","setItems","fileSave","object","addItem","newItem","arrayOfItems","doReorder","itemsSort","event","detail","complete","delItem","arrayToDeleteFrom","checkBox","arrayToCheck","displayItems","itemsToDisplay","result","map","arrayItem","e","target","name","checked","console","log","toDisplay","height","width","fontSize"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useReducer} from 'react'\nimport { IonItem, IonReorder, IonReorderGroup, IonItemDivider, IonCheckbox, IonGrid, IonRow, IonCol,\n    IonLabel, IonContent, IonButton, IonIcon, IonButtons, IonInput, IonTextarea } from '@ionic/react'\n\nimport { trash, save, close, addCircle } from 'ionicons/icons'\n\nimport { readSettings, overWriteFile } from '../backend/data'\nimport { store } from '../backend/store'\n\n// fields is the basic array of fields that's available upon installation\n/*\nconst fields = [\n    ['Bohne', true],\n    ['RÃ¶ster', true],\n    ['Kommentar', false]]\n\nconst fileName = 'data/beans-settings.data'\n*/\n\n\nexport const SortItems = (fileName, defaultSettings) => {\n\n    const globalState = useContext(store)\n    const { state, dispatch } = globalState\n\n    const [ignored, forceUpdate] = useReducer(x => x + 1, 0) // this function will force an updated of the dom\n \n    const [tempItem, setTempItem] = useState('')\n    \n\n    const reducer = (myState, action) => {\n        let tempArray = JSON.parse(JSON.stringify(myState))\n        switch (action.type){\n            case 'swap':\n                return action.value\n            case 'addRow':\n                tempArray.push([action.itemName, true])\n\n                return tempArray\n            case 'delRow':\n                \n                //tempArray = JSON.parse(JSON.stringify(state))\n                tempArray.splice(action.index, 1)\n                return tempArray\n                //return state.splice(action.index, 1)\n            case 'check':\n                tempArray[action.index][1] = action.checkState\n                return tempArray\n                //return state[action.index][1] = action.checkState\n            case 'reset':\n                return JSON.parse(JSON.stringify(state.beans.settings))\n            default:\n                throw new Error()\n\n        }\n    }\n\n    \n    const [items, setItems] = useReducer(reducer, JSON.parse(JSON.stringify(state.beans.settings)))\n\n    const fileSave = async (fileName, object) => {\n        await overWriteFile(fileName, object)\n        dispatch({type: 'setBeansSettings', value: object})\n\n    }\n\n    const addItem = (newItem, arrayOfItems) => {\n        setItems({type: 'addRow', itemName: newItem})\n        setTempItem('')\n\n    }\n\n\n// copied from the documentation:\n    function doReorder(itemsSort, event) {\n        itemsSort = event.detail.complete(itemsSort)\n        setItems({type: 'swap', value: itemsSort})\n    }\n    const delItem = (index, arrayToDeleteFrom) => {\n        setItems({type:'delRow', index:index})\n        forceUpdate()\n    }\n\n    const checkBox = (index, checkState, arrayToCheck) => {\n\n        setItems({type:'check', index: index,    checkState: checkState})\n\n    }\n\n\n    const displayItems = (itemsToDisplay) => {\n        const result = itemsToDisplay.map((arrayItem, index) => \n            <IonItem> \n                <IonCheckbox slot='start' color='dark' checked={arrayItem[1]}\n                        name={index}\n                        onIonChange={ e => checkBox(e.target.name, e.detail.checked, JSON.parse(JSON.stringify(items)) )}/>\n                <IonLabel>{arrayItem[0]}</IonLabel>\n                <IonButton color='dark'\n                            name={index}\n                            onClick={ e => delItem(e.target.name, JSON.parse(JSON.stringify(items)) )}\n                            > <IonIcon icon={trash}/></IonButton>\n                <IonReorder slot='end'/>\n            </IonItem>\n            )\n    return result\n    }\n    console.log('itemsbefore display', items)\n    const toDisplay = displayItems(items)\n\n    return (\n        <IonContent>\n            <IonItem>\n                <IonLabel slot='start'>Anzeigen</IonLabel>\n                <IonLabel slot='end'>Reihenfolge</IonLabel>\n            </IonItem>\n            \n            <IonReorderGroup disabled={false}  onIonItemReorder={ (e) => doReorder(items, e)}>\n                {toDisplay}\n            </IonReorderGroup>\n        \n        <IonItem class='ion-padding'>\n            <IonInput background='dark'\n                    placeholder='Feld hinzufÃ¼gen'\n                    onIonChange={e => setTempItem(e.detail.value)} value={tempItem}></IonInput>\n            <IonButton color='dark' style={{height: '35px', width: '35px'}} \n                    onClick={() => addItem(tempItem,items)}>\n                    <IonIcon icon={addCircle} style={{fontSize: '50px'}}  />\n                    </IonButton>\n        </IonItem>\n\n            <IonGrid><IonRow><IonCol>\n            {/* Save */}\n            <IonButton color='dark'\n                    class=\"ion-text-capitalize\"\n                    size='default'\n                    routerLink='./Home'\n                    onClick={() => {fileSave(fileName, items); /*setCounter(counter+1)*/; /*setTempItems(items)*/; }}\n                    ><IonIcon icon={save} slot='start'size='large'/>Speichern</IonButton>\n            </IonCol>\n            <IonCol>\n            {/* Cancel */}          \n            <IonButton color='dark'\n                    class=\"ion-text-capitalize\"\n                    size='default'\n                   \n                    onClick={() => setItems({type:'reset'})}\n                    ><IonIcon icon={close} slot='start' size='large'/>Abbrechen</IonButton>\n            </IonCol></IonRow></IonGrid>  {/*routerLink='./Home'*/}\n        </IonContent>\n          \n    ) \n}"]},"metadata":{},"sourceType":"module"}