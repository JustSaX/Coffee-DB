{"ast":null,"code":"var _jsxFileName = \"/mnt/Data/Javascript_code/Ionic/coffe-db/src/components/frontend/create-table.js\";\nimport { IonCard, IonCardContent, IonItem } from '@ionic/react';\nimport React from 'react';\nimport { readPicture } from '../backend/data';\nexport const dynamicData = array => {\n  //object contains an array with an object inside\n  // every row of the object needs to have the same keys => to be deletet?\n  //the keys of the object will be the titles\n  const titles = Object.keys(array[0]);\n  /* Explanation what the function does:\n  1. the outer map iterates through all the objects (lines) in the array\n      and creates the same amount of Ioncards.\n  2. The variable object contains each of the single objects in array\n  3: Object.keys(object) creates an array with all the keys in object\n  4. .filter removes the key with id\n  5. map iterates through all the remaining keys and creates for each key\n      a IonCardconten with the content key: value\n  */\n\n  const card = array.map(object => /*#__PURE__*/React.createElement(IonCard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, Object.keys(object).filter(key => key !== 'id').map(key => /*#__PURE__*/React.createElement(IonCardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, key, \": \", object[key]))));\n  return card;\n};","map":{"version":3,"sources":["/mnt/Data/Javascript_code/Ionic/coffe-db/src/components/frontend/create-table.js"],"names":["IonCard","IonCardContent","IonItem","React","readPicture","dynamicData","array","titles","Object","keys","card","map","object","filter","key"],"mappings":";AAAA,SAASA,OAAT,EAAkBC,cAAlB,EAAkCC,OAAlC,QAAiD,cAAjD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,WAAT,QAA4B,iBAA5B;AAEA,OAAO,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAClC;AACA;AACA;AAEA,QAAMC,MAAM,GAAGC,MAAM,CAACC,IAAP,CAAYH,KAAK,CAAC,CAAD,CAAjB,CAAf;AAEA;;;;;;;;;;AAaA,QAAMI,IAAI,GAAGJ,KAAK,CAACK,GAAN,CAAUC,MAAM,iBACzB,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKJ,MAAM,CAACC,IAAP,CAAYG,MAAZ,EAAoBC,MAApB,CAA2BC,GAAG,IAAIA,GAAG,KAAK,IAA1C,EAAgDH,GAAhD,CAAoDG,GAAG,iBACxD,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiBA,GAAjB,QAAwBF,MAAM,CAACE,GAAD,CAA9B,CADC,CADL,CADS,CAAb;AAQH,SAAOJ,IAAP;AACA,CA7BM","sourcesContent":["import { IonCard, IonCardContent, IonItem } from '@ionic/react';\nimport React from 'react';\n\nimport { readPicture } from '../backend/data'\n\nexport const dynamicData = (array) => {\n    //object contains an array with an object inside\n    // every row of the object needs to have the same keys => to be deletet?\n    //the keys of the object will be the titles\n\n    const titles = Object.keys(array[0])\n\n    /* Explanation what the function does:\n    1. the outer map iterates through all the objects (lines) in the array\n        and creates the same amount of Ioncards.\n    2. The variable object contains each of the single objects in array\n    3: Object.keys(object) creates an array with all the keys in object\n    4. .filter removes the key with id\n    5. map iterates through all the remaining keys and creates for each key\n        a IonCardconten with the content key: value\n    */\n\n\n\n\n    const card = array.map(object => \n        <IonCard>\n            {Object.keys(object).filter(key => key !== 'id').map(key => \n            <IonCardContent>{key}: {object[key]}</IonCardContent>\n            )}\n        </IonCard>\n        )\n\n return card  \n}\n"]},"metadata":{},"sourceType":"module"}