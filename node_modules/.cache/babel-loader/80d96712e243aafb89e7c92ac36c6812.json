{"ast":null,"code":"var _jsxFileName = \"/mnt/Data/Javascript_code/Ionic/coffe-db/src/components/frontend/add-items.js\";\nimport React from 'react';\nimport { useState } from 'react';\nimport { IonPage, IonCard, IonHeader, IonToolbar, IonBackButton, IonContent, IonTitle, IonButtons, IonTextarea, IonCardContent, IonLabel, IonItem, IonInput, IonGrid, IonRow, IonCol, IonIcon, IonButton } from '@ionic/react';\nimport { trash, save } from 'ionicons/icons';\nimport { beansDataFileName } from '../objects/filenames';\nimport { storeData } from '../backend/data';\nimport { takePicture, pic } from '../backend/camera';\n\nconst saveIt = async (fileName, array) => {\n  // https://stackoverflow.com/questions/42974735/create-object-from-array\n  const objectToSave = array.reduce((o, arrayItem) => ({ ...o,\n    [arrayItem[0]]: arrayItem[3]\n  }), {});\n  await storeData(beansDataFileName, objectToSave);\n};\n\nexport const AddItems = array => {\n  const [picStore, SetPicStore] = useState();\n  let newArray = array.map((arrayItem, index) => arrayItem.concat([index, ''])); // example of arrray ['Bean', true, 0, '']\n  // => Bean is the field title; true if it should be displayed; 0 is the index; '' will be filled with content eg. Malabar \n\n  const [inputValues, setInputValues] = useState(newArray); //debugger\n\n  const result = newArray.filter(arrayItem => arrayItem[1]).map(arrayItem => /*#__PURE__*/React.createElement(IonItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IonInput, {\n    placeholder: arrayItem[0],\n    name: arrayItem[0],\n    id: arrayItem[2],\n    value: arrayItem[3],\n    onIonChange: e => {\n      inputValues[e.target.id][3] = e.detail.value;\n      setInputValues(inputValues);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  })));\n  return /*#__PURE__*/React.createElement(React.Fragment, null, result, /*#__PURE__*/React.createElement(IonGrid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(IonRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IonCol, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonButton, {\n    color: \"dark\",\n    routerLink: \"./Show-beans\",\n    onClick: () => {\n      saveIt(beansDataFileName, inputValues);\n      setInputValues(inputValues.map(arrayItem => arrayItem.splice(0, 3).concat([''])));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(IonIcon, {\n    icon: save,\n    slot: \"icon-only\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(IonCol, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonButton, {\n    color: \"dark\",\n    onClick: () => setInputValues(inputValues.map(arrayItem => arrayItem.splice(0, 3).concat(['']))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonIcon, {\n    icon: trash,\n    slot: \"icon-only\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(IonCol, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonButton, {\n    color: \"dark\",\n    onClick: () => SetPicStore(pic()),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, \"picture\")))));\n};","map":{"version":3,"sources":["/mnt/Data/Javascript_code/Ionic/coffe-db/src/components/frontend/add-items.js"],"names":["React","useState","IonPage","IonCard","IonHeader","IonToolbar","IonBackButton","IonContent","IonTitle","IonButtons","IonTextarea","IonCardContent","IonLabel","IonItem","IonInput","IonGrid","IonRow","IonCol","IonIcon","IonButton","trash","save","beansDataFileName","storeData","takePicture","pic","saveIt","fileName","array","objectToSave","reduce","o","arrayItem","AddItems","picStore","SetPicStore","newArray","map","index","concat","inputValues","setInputValues","result","filter","e","target","id","detail","value","splice"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { useState } from 'react'\n\nimport { IonPage, IonCard, IonHeader, IonToolbar, IonBackButton, IonContent, IonTitle, IonButtons, IonTextarea,\n    IonCardContent, IonLabel, IonItem, IonInput, IonGrid, IonRow, IonCol, IonIcon, IonButton} from '@ionic/react'\n\nimport { trash, save } from 'ionicons/icons'\n\nimport { beansDataFileName } from '../objects/filenames'\nimport { storeData } from '../backend/data'\n\nimport { takePicture, pic } from '../backend/camera'\n\nconst saveIt = async (fileName, array) => {\n\n    // https://stackoverflow.com/questions/42974735/create-object-from-array\n    const objectToSave = array.reduce(( o, arrayItem) => ({...o, [arrayItem[0]]:arrayItem[3] }) , {})\n    await storeData(beansDataFileName, objectToSave)\n}\n\nexport const AddItems = (array) => {\n    const [picStore, SetPicStore] = useState()\n    \n    let newArray = array.map((arrayItem, index) => arrayItem.concat([index, '']))\n    // example of arrray ['Bean', true, 0, '']\n    // => Bean is the field title; true if it should be displayed; 0 is the index; '' will be filled with content eg. Malabar \n\n    const [inputValues, setInputValues] = useState(newArray)\n    //debugger\n    const result = newArray.filter(arrayItem => arrayItem[1])\n                        .map((arrayItem) => \n        <IonItem>\n            <IonInput placeholder={arrayItem[0]}\n                name={arrayItem[0]}\n                id={arrayItem[2]}\n                value={arrayItem[3]}\n                onIonChange={ e => {inputValues[e.target.id][3]=e.detail.value; setInputValues(inputValues) }}\n\n                ></IonInput>\n        </IonItem>  \n        )\n    return(<>\n    {result}\n    <IonGrid>\n        <IonRow>\n            <IonCol>\n                <IonButton color='dark'\n                        routerLink='./Show-beans'\n                        onClick={() => {saveIt(beansDataFileName, inputValues)\n                            setInputValues(inputValues.map(arrayItem => arrayItem.splice(0,3).concat([''])))}} >\n                    <IonIcon icon={save} slot='icon-only'/>\n                </IonButton>\n            </IonCol>\n            <IonCol>\n            <IonButton color='dark'\n                onClick={ () => setInputValues(inputValues.map(arrayItem => arrayItem.splice(0,3).concat([''])))}>\n                    <IonIcon icon={trash} slot='icon-only'/>\n                </IonButton>\n            </IonCol>\n            <IonCol>\n            <IonButton color='dark'\n                onClick={ () => SetPicStore(pic())}>\n                    picture\n                </IonButton>\n            </IonCol>\n        </IonRow>\n    </IonGrid>\n    </>\n    )\n}\n\n"]},"metadata":{},"sourceType":"module"}