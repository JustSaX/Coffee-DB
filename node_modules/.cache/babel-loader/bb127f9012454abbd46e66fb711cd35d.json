{"ast":null,"code":"import { Plugins, CameraResultType, FilesystemDirectory, FilesystemEncoding } from '@capacitor/core';\nconst {\n  Camera,\n  Filesystem\n} = Plugins;\nlet imageUrl;\nlet image;\nexport const takePicture = async () => {\n  image = await Camera.getPhoto({\n    quality: 90,\n    allowEditing: true,\n    resultType: CameraResultType.Uri\n  });\n  console.log(image); // image.webPath will contain a path that can be set as an image src. \n  // You can access the original file using image.path, which can be \n  // passed to the Filesystem API to read the raw data of the image, \n  // if desired (or pass resultType: CameraResultType.Base64 to getPhoto)\n  //imageUrl = image.webPath;\n  // Can be set to the src of an image now\n\n  console.log('image.webpath:', image.webPath);\n};\nexport const pic = () => {\n  takePicture();\n  return image;\n};","map":{"version":3,"sources":["/mnt/Data/Javascript_code/Ionic/coffe-db/src/components/backend/camera.js"],"names":["Plugins","CameraResultType","FilesystemDirectory","FilesystemEncoding","Camera","Filesystem","imageUrl","image","takePicture","getPhoto","quality","allowEditing","resultType","Uri","console","log","webPath","pic"],"mappings":"AAAA,SAASA,OAAT,EAAkBC,gBAAlB,EAAoCC,mBAApC,EAAyDC,kBAAzD,QAAmF,iBAAnF;AAGA,MAAM;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,IAAyBL,OAA/B;AAEA,IAAIM,QAAJ;AACA,IAAIC,KAAJ;AAGA,OAAO,MAAMC,WAAW,GAAG,YAAY;AACpCD,EAAAA,KAAK,GAAG,MAAMH,MAAM,CAACK,QAAP,CAAgB;AAC7BC,IAAAA,OAAO,EAAE,EADoB;AAE7BC,IAAAA,YAAY,EAAE,IAFe;AAG7BC,IAAAA,UAAU,EAAEX,gBAAgB,CAACY;AAHA,GAAhB,CAAd;AAKDC,EAAAA,OAAO,CAACC,GAAR,CAAYR,KAAZ,EANqC,CAOrC;AACA;AACA;AACA;AACA;AACA;;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BR,KAAK,CAACS,OAApC;AACD,CAdM;AAgBP,OAAO,MAAMC,GAAG,GAAG,MAAM;AACzBT,EAAAA,WAAW;AACV,SAAOD,KAAP;AACA,CAHM","sourcesContent":["import { Plugins, CameraResultType, FilesystemDirectory, FilesystemEncoding } from '@capacitor/core';\n\n\nconst { Camera, Filesystem } = Plugins;\n\nlet imageUrl\nlet image\n\n\nexport const takePicture = async () => {\n   image = await Camera.getPhoto({\n    quality: 90,\n    allowEditing: true,\n    resultType: CameraResultType.Uri\n  });\n  console.log(image)\n  // image.webPath will contain a path that can be set as an image src. \n  // You can access the original file using image.path, which can be \n  // passed to the Filesystem API to read the raw data of the image, \n  // if desired (or pass resultType: CameraResultType.Base64 to getPhoto)\n  //imageUrl = image.webPath;\n  // Can be set to the src of an image now\n  console.log('image.webpath:', image.webPath)\n}\n\nexport const pic = () => {\ntakePicture()\n return image\n} \n\n"]},"metadata":{},"sourceType":"module"}